{
  "hash": "b77ef3ef5ea85d0321c1af483700d62c",
  "result": {
    "markdown": "---\ntitle: \"TUTORIAL 6 - APIs and JSON data\"\nimage: \"Cthulhuhockeymask.png\"\nexecute: \n  eval: false\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyr)\nlibrary(dplyr)\nlibrary(repurrrsive)\nlibrary(tibblify)\nlibrary(purrr)\nlibrary(tidyverse)\nlibrary(readxl)\nlibrary(rjson)\nlibrary(jsonlite)\nlibrary(ggplot2)\n\n\nBio<-fromJSON(\"draft.json\")\n\nnoway<-as.data.frame(Bio)\n\nplayers<- noway %>%\n  select(data.draftYear, data.playerId, data.playerName, data.draftYear,\n         data.roundNumber, data.overallPickNumber, data.pickInRound,\n         data.height, data.weight, data.position)\n\ncleanplayers <- drop_na(players)\ncleanplayers$playerId<-cleanplayers$data.playerId\n\ncleanplayers2 <- cleanplayers %>%\n  distinct(playerId, .keep_all= TRUE)\n\nskaters<-cleanplayers2%>%\n  filter(data.position!=\"G\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\napi_url <- \"https://statsapi.web.nhl.com\"\n\n\nrecentdrafts<-skaters%>%\n  filter(data.draftYear>1999)\nrecentdrafts$playerId<-recentdrafts$data.playerId\nplayerIds <- as.list(recentdrafts$data.playerId)\n\ntestloop<-data.frame()\ni<-0\nfor (player_id in playerIds){\n  \n  \n\nendpoint <- paste0(\"/api/v1/people/\", player_id, \"/stats?stats=yearByYear\")\n\n\nurl_json <- paste0(api_url,endpoint)\n\nraw_json <- url_json %>% \n  httr::GET() %>% \n  httr::content()\n\nargh <- tibblify(raw_json$stats[[1]]$splits)\n\nplayerstats<- unnest_wider(argh, col=c(stat,league))\nplayerstats$playerId<-player_id\nplayerstatsfinal<-playerstats %>%\n  filter(name==\"National Hockey League\") %>%\n  select(season, games, points, goals, assists,  \n         name, playerId) \n  \ntestloop<-rbind(testloop,playerstatsfinal)\ni<-i+1\nprint(i)\n}\n\n\n\nd2000on<-full_join(testloop,recentdrafts, by=\"playerId\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndataIwant <- d2000on\nwrite.csv(dataIwant, file=\"NHLskaterstats.csv\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(dplyr)\n\ndataIwant2<- dataIwant %>%\n  mutate(seasonshort = as.numeric(str_sub(season, start=1, end=4)))\n\ndataIwant2$postdraft<- dataIwant2$seasonshort-dataIwant2$data.draftYear\n\ndataIwant2$postdraft <- paste(\"dY\", dataIwant2$postdraft)\n\ndataIwant3<-dataIwant2 %>%\n  group_by(playerId, data.draftYear, data.playerName, data.roundNumber,\n           data.pickInRound, data.overallPickNumber, data.position, data.height,\n           data.weight, postdraft) %>%\n  summarise(totgames=sum(games), totgoals=sum(goals), totassist=sum(assists), totpoint=sum(points))\n\ndatawide<-dataIwant3 %>%\n  pivot_wider(names_from = postdraft, values_from = c(totgames, totgoals, totassist, totpoint),\n              values_fill = 0)\n\nallplayerswide<-full_join(cleanplayers,datawide, by=\"playerId\")\n\nallplayerswide <- allplayerswide %>% \n    mutate_at(19:106, ~replace_na(.,0))\n\nlookup <- c(name = \"data.playerName.x\", \n            draftyear = \"data.draftYear.x\",\n            round = \"data.roundNumber.x\",\n            overall = \"data.overallPickNumber.x\",\n            pickinRound = \"data.pickInRound.x\",\n            height = \"data.height.x\",\n            weight = \"data.weight.x\",\n            position = \"data.position.x\")\n\ntestthing<-rename(allplayerswide, all_of(lookup))\n\nkeepthis<-testthing[c(1, 3:10, 19:106)]\n\ngames<-keepthis%>%\n  select(c(1:9, starts_with(\"totgames\")))\n\ngameslong <- games %>%\n  pivot_longer(\n    cols = starts_with(\"totgames\"),\n    names_to = \"postdraft\",\n    names_prefix = \"totgames_dY \",\n    values_to = \"NHLgames\")\n\ngameslong <- gameslong%>%\n  filter(postdraft!=\"NA\")\n\ngameslong$postdraft<-as.numeric(gameslong$postdraft)\n\n\npoints<-keepthis%>%\n  select(c(1:9, starts_with(\"totpoint\")))\n\npointslong <- points %>%\n  pivot_longer(\n    cols = starts_with(\"totpoint\"),\n    names_to = \"postdraft\",\n    names_prefix = \"totpoint_dY \",\n    values_to = \"points\")\n\npointslong <- pointslong%>%\n  filter(postdraft!=\"NA\")\n\npointslong$postdraft<-as.numeric(pointslong$postdraft)\n\nassists<-keepthis%>%\n  select(c(1:9, starts_with(\"totassist\")))\n\nassistslong <- assists %>%\n  pivot_longer(\n    cols = starts_with(\"totassist\"),\n    names_to = \"postdraft\",\n    names_prefix = \"totassist_dY \",\n    values_to = \"assists\")\n\nassistslong <- assistslong%>%\n  filter(postdraft!=\"NA\")\n\nassistslong$postdraft<-as.numeric(assistslong$postdraft)\n\ngoals<-keepthis%>%\n  select(c(1:9, starts_with(\"totgoal\")))\n\ngoalslong <- goals %>%\n  pivot_longer(\n    cols = starts_with(\"totgoal\"),\n    names_to = \"postdraft\",\n    names_prefix = \"totgoals_dY \",\n    values_to = \"goals\")\n\ngoalslong <- goalslong%>%\n  filter(postdraft!=\"NA\")\n\ngoalslong$postdraft<-as.numeric(goalslong$postdraft)\n\n\n\ngamegoal<- left_join(gameslong,goalslong, by = c(\"playerId\", \"draftyear\",\n                                                 \"name\", \"round\", \"pickinRound\",\n                                                 \"height\", \"weight\", \"position\",\n                                                 \"overall\", \"postdraft\"))\ngga<-left_join(gamegoal,assistslong, by = c(\"playerId\", \"draftyear\",\n                                                 \"name\", \"round\", \"pickinRound\",\n                                                 \"height\", \"weight\", \"position\",\n                                                 \"overall\", \"postdraft\"))\nggap<-left_join(gga,pointslong, by = c(\"playerId\", \"draftyear\",\n                                                 \"name\", \"round\", \"pickinRound\",\n                                                 \"height\", \"weight\", \"position\",\n                                                 \"overall\", \"postdraft\"))\n\n\n\n\nstatslong <- ggap %>%\n  mutate(position = replace(position, position == \"G\", \"Goaltender\"),\n         position = replace(position, position == \"D\", \"Defense\"),\n         position = replace(position, position == \"C\" | position ==\"LW\", \"Forward\"),\n         position = replace(position, position == \"RW\" | position == \"F\", \"Forward\"),\n         position = replace(position, position == \"C/LW\" | position == \"C/RW\", \"Forward\"),\n         position = replace(position, position == \"LW/RW\", \"Forward\"))\n  \n\nactualdata<- statslong %>%\n  filter(round<8, draftyear>2000)\n\nactualdata2<-actualdata%>%\n  distinct(playerId,postdraft, .keep_all = TRUE)\n\n\n\n\n \nwrite.csv(actualdata2, file = \"NHLdraftstats.csv\")\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}