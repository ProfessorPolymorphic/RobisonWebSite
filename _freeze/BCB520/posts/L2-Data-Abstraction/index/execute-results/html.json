{
  "hash": "47b485fc3cdb20e13bc465f6e69b6c71",
  "result": {
    "markdown": "---\ntitle: \"LECTURE 2 - DATA ABSTRACTION\"\nsubtitle: \"BCB 504 / 520\"\nformat:\n  revealjs: \n    slide-number: true\n    chalkboard: \n      buttons: false\n    preview-links: auto\n    css: styles.css\n    footer: <a href=\"https://canvas.uidaho.edu/courses/17806\" target=\"_blank\">CANVAS</a>...<a href=\"https://professorpolymorphic.github.io/RobisonWebSite/BCB520/BCB520.html\" target=\"_blank\">HOME</a>\n    theme: [default, custom.scss]\nauthor: \"Barrie Robison\"\ndate: \"2023-01-17\"\ncategories: [Lecture, DataViz, Data]\nimage: \"CthulhuAbstracts.png\"\n---\n\n\n## LAST LECTURE\n\nComputer-based visualization systems provide visual representations of datasets designed to help people carry out tasks more effectively.\n\n![](frameworkbig.jpg){.absolute bottom=\"0\" width=\"800\"}\n\n## WHAT?\n\n![](what.png){.absolute bottom=\"0\" height=\"400\"} Before you design a visualization, you need to understand the [data]{.red}. Here, we consider the semantics to describe the [DATA TYPES]{.blue} and [DATA ATTRIBUTES]{.blue}.\n\n## THE THREE MAJOR DATA TYPES\n\n::: r-stack\n![](Tables.png){.fragment .absolute bottom=\"100\" left=\"0\" height=\"400\"}\n\n![](Networks.png){.fragment .absolute bottom=\"100\" left=\"280\" height=\"400\"}\n\n![](Spatial.png){.fragment .absolute bottom=\"75\" left=\"520\" height=\"390\"}\n:::\n\n## DATA ATTRIBUTES\n\n![](Attributes.png){.absolute bottom=\"70\" width=\"800\"}\n\n## WHAT?\n\nComputer-based visualization systems provide visual representations of [datasets]{.red} designed to help people carry out tasks more effectively.\n\n![](whatexpanded.png){.absolute bottom=\"0\" right=\"0\" width=\"450\"}\n\n![](what.png){.absolute bottom=\"0\" height=\"400\"}\n\n## DATA SEMANTICS\n\n::: {layout-ncol=\"2\"}\n### What does this sequence of six numbers mean?\n\n[14, 2.6, 30, 30, 15, 100001]{.blue} Two points far from each other in 3D space?\n\n### VIZ\n\n\n::: {.cell layout-align=\"right\"}\n::: {.cell-output-display}\n```{=html}\n<div id=\"htmlwidget-dd5bac95ee0449094416\" style=\"width:960px;height:480px;\" class=\"plotly html-widget\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-dd5bac95ee0449094416\">{\"x\":{\"visdat\":{\"e1754f1563fd\":[\"function () \",\"plotlyVisDat\"]},\"cur_data\":\"e1754f1563fd\",\"attrs\":{\"e1754f1563fd\":{\"x\":[\"14\",\"30\"],\"y\":[\"2.6\",\"15\"],\"z\":[\"30\",\"100001\"],\"mode\":\"markers\",\"alpha_stroke\":1,\"sizes\":[10,100],\"spans\":[1,20],\"type\":\"scatter3d\"}},\"layout\":{\"margin\":{\"b\":40,\"l\":60,\"t\":25,\"r\":10},\"scene\":{\"xaxis\":{\"title\":[]},\"yaxis\":{\"title\":[]},\"zaxis\":{\"title\":[]}},\"xaxis\":{\"type\":\"category\",\"categoryorder\":\"array\",\"categoryarray\":[\"14\",\"30\"]},\"yaxis\":{\"type\":\"category\",\"categoryorder\":\"array\",\"categoryarray\":[\"15\",\"2.6\"]},\"hovermode\":\"closest\",\"showlegend\":false},\"source\":\"A\",\"config\":{\"modeBarButtonsToAdd\":[\"hoverclosest\",\"hovercompare\"],\"showSendToCloud\":false},\"data\":[{\"x\":[\"14\",\"30\"],\"y\":[\"2.6\",\"15\"],\"z\":[\"30\",\"100001\"],\"mode\":\"markers\",\"type\":\"scatter3d\",\"marker\":{\"color\":\"rgba(31,119,180,1)\",\"line\":{\"color\":\"rgba(31,119,180,1)\"}},\"error_y\":{\"color\":\"rgba(31,119,180,1)\"},\"error_x\":{\"color\":\"rgba(31,119,180,1)\"},\"line\":{\"color\":\"rgba(31,119,180,1)\"},\"frame\":null}],\"highlight\":{\"on\":\"plotly_click\",\"persistent\":false,\"dynamic\":false,\"selectize\":false,\"opacityDim\":0.2,\"selected\":{\"opacity\":1},\"debounce\":0},\"shinyEvents\":[\"plotly_hover\",\"plotly_click\",\"plotly_selected\",\"plotly_relayout\",\"plotly_brushed\",\"plotly_brushing\",\"plotly_clickannotation\",\"plotly_doubleclick\",\"plotly_deselect\",\"plotly_afterplot\",\"plotly_sunburstclick\"],\"base_url\":\"https://plot.ly\"},\"evals\":[],\"jsHooks\":[]}</script>\n```\n:::\n:::\n\n:::\n\n## DATA SEMANTICS\n\n::: {layout-ncol=\"2\"}\n### What does this sequence of six numbers mean?\n\n[14, 2.6, 30, 30, 15, 100001]{.blue} Two points close to each other in 2D space, with 15 links between them, and a weight of 100001 for the link?\n\n### VIZ\n\n![](RidiculousNetwork.png)\n:::\n\n## DATA SEMANTICS\n\n::: {layout-ncol=\"2\"}\n### What about this data?\n\n[Basil, 7, S, Pear]{.blue}:\\\nFood shipment of produce (basil & pear) arrived in satisfactory condition on 7th day of month\n\n### VIZ\n\n![](BasilPearDelivery.png)\n:::\n\n## DATA SEMANTICS\n\n::: {layout-ncol=\"2\"}\n### What about this data?\n\n[Basil, 7, S, Pear]{.blue}:\\\nBasil Point neighborhood of city had 7 inches of snow cleared by the Pear Creek Limited snow removal service\n\n### VIZ\n\n![](snowremoval.png)\n:::\n\n## DATA SEMANTICS\n\n::: {layout-ncol=\"2\"}\n### What about this data?\n\n[Basil, 7, S, Pear]{.blue}:\\\nLab rat Basil made 7 attempts to find way through south section of maze, these trials used pear as reward food\n\n### VIZ\n\n![](ratmazepear.png)\n:::\n\n## SEMANTICS\n\nThe meaning of a word, phrase, sentence, or text.\n\n[Basil, 7, S, Pear]{.blue}\n\n![](datatable.png){.absolute bottom=\"100\" right=\"0\" width=\"550\"}\n\n## SEMANTICS FOR DATA {.smaller}\n\n:::: {layout-ncol=\"2\"}\n### Semantics\n\n-   [item:]{.red} individual entity, discrete\n    -   eg patient, car, stock, city\n    -   \"independent variable\"\n-   [attribute:]{.red} property that is measured, observed, logged...\n    -   eg height, blood pressure for patient\n    -   eg horsepower, make for car\n    -   \"dependent variable\"\n\n\n### Data Table\n![](datatable2.png)\n::::\n\n[[ITEM:]{.red} Person]{.fragment}\n\n[[ATTRIBUTES:]{.red} Name, Age, Shirt Size, Favorite Fruit]{.fragment}\n\n\n\n## OTHER DATA TYPES\n\n-   Links\n    -   express relationship between two items\n    -   e.g/ friendship on facebook, interaction between proteins \n-   Positions\n    -   spatial data: location in 2D or 3D\n    -   e.g. pixels in photo, voxels in MRI scan, latitude/longitude \n-   Grids\n    -   sampling strategy for continuous data\n\n## WHAT?\n\nComputer-based visualization systems provide visual representations of [datasets]{.red} designed to help people carry out tasks more effectively.\n\n![](whatexpanded.png){.absolute bottom=\"0\" right=\"0\" width=\"450\"}\n\n![](what.png){.absolute bottom=\"0\" height=\"400\"}\n\n## DATASET TYPES: TABLES\n\n### Flat Table\n\n::: columns\n::: {.r-fit-text .column width=\"40%\"}\n-   One [ITEM]{.red} per row\n\n    -   often called an **observation**\n\n-   Each column is an [ATTRIBUTE]{.red}\n\n    -   often called a **variable**\n\n-   A cell holds the [VALUE]{.red} for an item/attribute pair\n\n-   A UNIQUE key can be used (implicitly or explicitly) to identify each item even if they share all measured attributes\n:::\n\n::: {.column width=\"60%\"}\n![](flattable.png)\n:::\n:::\n\n## FLAT TABLE EXAMPLE\n\n![](spreadsheet.png)\n\n## MULTIDIMENSIONAL TABLES\n\nindexing based on multiple keys (eg genes, patients)\n\n::: {layout-ncol=\"2\"}\n![](multidimtable1.png)\n\n![](multidimtable2.png)\n:::\n\n## NETWORKS\nNetwork/graph nodes (vertices) connected by links (edges). A tree is special case: no cycles, often have roots, and are directed.\n\n::: {layout-ncol=\"2\"}\n![](treeandnet.png)\n\n![](Networks.png){width=200}\n:::\n\n## FIELDS\n\n![](treenetfield.png)\n\n## SPATIAL FIELDS 1\n\nAttribute values associated w/ cells cell contains value from continuous domain (eg temperature, pressure, wind velocity measured or simulated).\n\n::: {layout-ncol=\"2\"}\n![](spatialfields.png){width=300}\n\n![](map1.png){width=400}\n:::\n\n## SPATIAL FIELDS 2 {.smaller}\n\n::: {layout-ncol=\"2\"}\n-   Attribute values associated w/ cells.\n-   Cell contains value from continuous domain\n    - (eg temperature, pressure, wind velocity)\n-   Measured or simulated. \n-   Major concerns\n    -   sampling:\n        -   where attributes are measured\n    -   interpolation:\n        -   how to model attributes elsewhere\n    -   grid types\n\n\n![](MRI.png){width=500}\n:::\n\n## SPATIAL FIELDS 3\n\nattribute values associated w/ cells cell contains value from continuous domain eg temperature, pressure, wind velocity measured or simulated major concerns sampling:\u000bwhere attributes are measured interpolation:\u000bhow to model attributes elsewhere grid types major divisions attributes per cell: \u000bscalar (1), vector (2), tensor (many)\n\n![](cellfields.png)\n\n## GEOMETRY\n\n![](alltypes.png)\n\n## GEOMETRY 2\n\nshape of items explicit spatial positions / regions points, lines, curves, surfaces, volumes boundary between computer graphics and visualization graphics: geometry taken as given vis: geometry is result of a design decision\n\n![](geometrymap.png) \\## COLLECTIONS\n\n![](Clusters1.png) \\## COLLECTIONS 2\n\nhow we group items sets unique items, unordered lists ordered, duplicates possible clusters groups of similar items\n\n![](Collections.png)\n\n## DATA TYPES\n\n![](datatype1.png)\n\n## ATTRIBUTE TYPES\n\nwhich classes of values & measurements? categorical (nominal) compare equality no implicit ordering ordered ordinal less/greater than defined quantitative meaningful magnitude arithmetic possib\n\n![](Attributes.png)\n\n## EXAMPLE\n\ncategorical\n\nordinal\n\nquantitative\n\n![](spreadsheet.png)\n\n## EXAMPLE\n\ncategorical\n\nordinal\n\nquantitative\n\n![](colorspreadsheet.png)\n\n## ADDITIONAL SEMANTIC COMPONENTS\n\n![](Otherstuff.png)\n\n## DATA ABSTRACTION\n\ntranslate from domain-specific language to generic visualization language\n\nidentify dataset type(s), attribute types identify cardinality how many items in the dataset? what is cardinality of each attribute? number of levels for categorical data range for quantitative data\n\nconsider whether to transform data guided by understanding of task\n\n## MODELS: DATA VS CONCEPTUAL\n\ndata model mathematical abstraction sets with operations, eg floats with \\* / - + variable data types in programming languages conceptual model mental construction (semantics) supports reasoning typically based on understanding of tasks \\[stay tuned!\\]\n\ndata abstraction process relies on conceptual model for transforming data if needed\n\n## MODELS: EXAMPLE\n\ndata model: floats 32.52, 54.06, -14.35, ... conceptual model temperature multiple possible data abstractions continuous to 2 significant figures: quantitative task: forecasting the weather hot, warm, cold: ordinal task: deciding if bath water is ready above freezing, below freezing: categorical task: decide if I should leave the house today\n\n## DERIVED ATTRIBUTES\n\nderived attribute: compute from originals simple change of type acquire additional data complex transformation\n\n![](derived.png)\n\n## EXAMPLE\n\n\\[Using Strahler numbers for real time visual exploration of huge graphs. Auber. Proc. Intl. Conf. Computer Vision and Graphics, pp. 56--69, 2002.\\]\n\nStrahler number centrality metric for trees/networks derived quantitative attribute draw top 5K of 500K for good skeleton\n\n![](Strahler.png) ![](StrahlerAnalysis.png) \\## SUMMARY\n\n![](what.png)\n\n![](whatexpanded.png)\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"../../../site_libs/htmlwidgets-1.5.4/htmlwidgets.js\"></script>\n<script src=\"../../../site_libs/plotly-binding-4.10.1/plotly.js\"></script>\n<script src=\"../../../site_libs/typedarray-0.1/typedarray.min.js\"></script>\n<script src=\"../../../site_libs/jquery-3.5.1/jquery.min.js\"></script>\n<link href=\"../../../site_libs/crosstalk-1.2.0/css/crosstalk.min.css\" rel=\"stylesheet\" />\n<script src=\"../../../site_libs/crosstalk-1.2.0/js/crosstalk.min.js\"></script>\n<link href=\"../../../site_libs/plotly-htmlwidgets-css-2.11.1/plotly-htmlwidgets.css\" rel=\"stylesheet\" />\n<script src=\"../../../site_libs/plotly-main-2.11.1/plotly-latest.min.js\"></script>\n"
      ],
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    function fireSlideChanged(previousSlide, currentSlide) {\n\n      // dispatch for htmlwidgets\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for reveal\n    if (window.Reveal) {\n      window.Reveal.addEventListener(\"slidechanged\", function(event) {\n        fireSlideChanged(event.previousSlide, event.currentSlide);\n      });\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}