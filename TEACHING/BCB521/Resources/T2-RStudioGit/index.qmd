---
title: "CONNECTING GIT WITH RSTUDIO"
author: "Barrie Robison"
date: "2023-09-01"
categories: [Tutorial, RStudio, GitHub, Version Control, Tools]
image: "MythosPortfolio.png"
code-fold: true
code-tools: true
description: "Setting up RStudio for version control"
---

## SUMMARY

If you are brand new to both RStudio and GitHub, then chances are you won't be able to create a new git repository when you create your first RStudio project in [Assignment 2](../Assignments/A2-PortfolioSetUp/index.qmd). Fear not, for I have created this tutorial!

These directions are a more focused distillation of the very complete treatment of this topic found [here](https://happygitwithr.com)

## CONNECTING RSTUDIO AND GITHUB

### Preliminary Steps:

1.  **Install Git**: First, make sure you have Git installed on your system. Go to the Terminal (I use the Terminal tab in Rstudio). Enter `which git` to request the path to your Git executable and `git --version` to see its version.

If you see a path, you have Git already. No need to install! Yay!

If you get some version of `git: command not found` then the next section is for you.

**WINDOWS**

This approach will put the Git executable in a location that makes it easy for RStudio to find.

Download Git from [here](https://gitforwindows.org) and install it.

NOTE: When asked about "Adjusting your PATH environment", make sure to select "Git from the command line and also from 3rd-party software".

2.  **Install RStudio**: You also need RStudio installed. If you don't have it yet, download and install from [here](https://rstudio.com/products/rstudio/download/).

### Connect Git to your user account

Use the Terminal (I access the Terminal from within RStudio) and execute these commands:

`git config --global user.name 'Your Username'`

`git config --global user.email 'Your email for your Github account'`

`git config --global --list` 

### Git Clients

You are probably using GitHub Desktop already. There are other clients out there, though. Feel free to use whatever you like. RStudio even has a basic Git client if you want to use that.  We might have to add the local version of the repo you are about to create to GitHub Desktop, but we'll deal with that later.

### Make a repository

Go to https://github.com and make sure you are logged in.

Near "Repositories", click the big green "New" button. Or, if you are on your own profile page, click on "Repositories", then click the big green "New" button.

How to fill this in:

Repository template: No template.

Repository name: myrepo or whatever you wish (we'll delete this soon).

Description: "Repository for testing my Git/GitHub setup" or similar. It's nice to have something here, so you'll see it appear in the README.

Public.

Initialize this repository with: Add a README file.

Click the big green button that says "Create repository".

Now click the big green button that says "\<\> Code".

Copy a clone URL to your clipboard. To keep things simple, copy the HTTPS URL.

### Use RStudio to clone the repository

In RStudio, start a new Project:

File> New Project> Version Control> Git.

In "Repository URL", paste the URL of your new GitHub repository. It will be something like this https://github.com/someusername/myrepo.git.

Don't see an option to get the Project from Version Control? Restart RStudio and try again.

Accept the default project directory name, e.g. myrepo, which coincides with the GitHub repo name.

Pay attention where the Project will be saved locally. A common rookie mistake is to have no idea where you are saving files or what your working directory is. Pay attention. Be intentional. Where is your GitHub client expecting to put things?

I suggest you check "Open in new session", as that's what you'll usually do in real life.

Click "Create Project".

You should find yourself in a new local RStudio Project that represents your test repo on GitHub. This should download the README.md file from GitHub. Look in RStudio's file browser pane for the README.md file.

Let's test things out!

From RStudio, modify the README.md file, e.g., by adding the line "This is a line from RStudio". Save your changes.

Commit these changes to your local repo. How?

From RStudio:

Click the "Git" tab in upper right pane. Check "Staged" box for README.md. If you're not already in the Git pop-up, click "Commit". Type a message in "Commit message", such as "Commit from RStudio". Click "Commit".

Push your local changes online to GitHub

Click the green "Push" button to send your local changes to GitHub.

12.6 Confirm the local change propagated to the GitHub remote

Go back to the browser. I assume we're still viewing your new GitHub repo.

Refresh.

You should see the new "This is a line from RStudio" in the README.

If you click on "commits", you should see one with the message "Commit from RStudio".

Awesome!
