[
  {
    "objectID": "posts/post-with-code/index.html#who-am-i",
    "href": "posts/post-with-code/index.html#who-am-i",
    "title": "Lecture 1 - INTRO",
    "section": "WHO AM I?",
    "text": "WHO AM I?\nBarrie Robison\nDepartment of Biological Sciences\nInstitute for Interdisicplinary Data Sciences\nPolymorphic Games\nUniversity of Idaho"
  },
  {
    "objectID": "posts/post-with-code/index.html#who-are-you",
    "href": "posts/post-with-code/index.html#who-are-you",
    "title": "Lecture 1 - INTRO",
    "section": "WHO ARE YOU?",
    "text": "WHO ARE YOU?\nBriefly:\n\nYour name\nYour discipline\nYour degree progress\nYour technical proficiency with data visualization"
  },
  {
    "objectID": "posts/post-with-code/index.html#course-summary",
    "href": "posts/post-with-code/index.html#course-summary",
    "title": "Lecture 1 - INTRO",
    "section": "COURSE SUMMARY",
    "text": "COURSE SUMMARY\nStudents completing this course will be able to:\n\n\nDescribe and manipulate tabular, network, and spatial data; transform these data into a form suitable for visualization.\nMake effective data visualization design choices related to marks and channels, spatial arrangement, and components of color.\nDesign effective data visualizations for tabular, network, and spatial data with quantitative and categorical attributes.\nImplement their data visualization designs using existing tools in R (or other toolkits preferred by the student).\nExplain whether a visual encoding is perceptually appropriate for a specific combination of task and data.\nDemonstrate their skills with at least two novel visualizations suitable suitable for inclusion in an online Data Science Portfolio.\n\nThe course materials are located on Canvas."
  },
  {
    "objectID": "posts/post-with-code/index.html#visualization",
    "href": "posts/post-with-code/index.html#visualization",
    "title": "Lecture 1 - INTRO",
    "section": "VISUALIZATION",
    "text": "VISUALIZATION\nComputer-based systems provide visual representations of datasets designed to help people carry out tasks more effectively.\nTamara Munzner\nDepartment of Computer Science\nInfoVis Group\nUniversity of British Columbia"
  },
  {
    "objectID": "posts/post-with-code/index.html#the-human",
    "href": "posts/post-with-code/index.html#the-human",
    "title": "Lecture 1 - INTRO",
    "section": "THE HUMAN",
    "text": "THE HUMAN\nWhy have a human in the loop?\nComputer-based visualization systems provide visual representations of datasets designed to help people carry out tasks more effectively.\nWe don’t need visualiztion when a trusted fully automatic solution exists. Visualization is suitable when there is a need to augment human capabilities rather than replace people with computational decision-making methods.\n\nVisualization is useful when:\n-analysis problem is ill-specified and we don’t know exactly what questions to ask in advance -long-term use for end users (ex: exploratory analysis of scientific data) -presentation of known results (ex: New York Times Upshot) -stepping stone to assess requirements before developing models -help automatic solution developers refine & determine parameters -help end users of automatic solutions verify, build trust"
  },
  {
    "objectID": "posts/post-with-code/index.html#the-representation",
    "href": "posts/post-with-code/index.html#the-representation",
    "title": "Lecture 1 - INTRO",
    "section": "THE REPRESENTATION",
    "text": "THE REPRESENTATION\nComputer-based visualization systems provide visual representations of datasets designed to help people carry out tasks more effectively."
  },
  {
    "objectID": "posts/post-with-code/index.html#why-depend-on-vision",
    "href": "posts/post-with-code/index.html#why-depend-on-vision",
    "title": "Lecture 1 - INTRO",
    "section": "WHY DEPEND ON VISION?",
    "text": "WHY DEPEND ON VISION?\nComputer-based visualization systems provide visual representations of datasets designed to help people carry out tasks more effectively.\nhuman visual system is high-bandwidth channel to brain overview possible due to background processing subjective experience of seeing everything simultaneously significant processing occurs in parallel and pre-attentively sound: lower bandwidth and different semantics overview not supported subjective experience of sequential stream touch/haptics: impoverished record/replay capacity only very low-bandwidth communication thus far taste, smell: no viable record/replay devices"
  },
  {
    "objectID": "posts/post-with-code/index.html#why-represent-all-the-data",
    "href": "posts/post-with-code/index.html#why-represent-all-the-data",
    "title": "Lecture 1 - INTRO",
    "section": "WHY REPRESENT (ALL THE) DATA?",
    "text": "WHY REPRESENT (ALL THE) DATA?\nComputer-based visualization systems provide visual representations of datasets designed to help people carry out tasks more effectively.\nsummaries lose information, details matter confirm expected and find unexpected patterns assess validity of statistical model"
  },
  {
    "objectID": "posts/post-with-code/index.html#anscombes-quartet",
    "href": "posts/post-with-code/index.html#anscombes-quartet",
    "title": "Lecture 1 - INTRO",
    "section": "ANSCOMBE’S QUARTET",
    "text": "ANSCOMBE’S QUARTET\n\nlibrary(ggplot2)\nlibrary(grid)\nlibrary(gridExtra)\nlibrary(datasets)\nlibrary(tidyverse)\nlibrary(dplyr)\ndatasets::anscombe\n\n   x1 x2 x3 x4    y1   y2    y3    y4\n1  10 10 10  8  8.04 9.14  7.46  6.58\n2   8  8  8  8  6.95 8.14  6.77  5.76\n3  13 13 13  8  7.58 8.74 12.74  7.71\n4   9  9  9  8  8.81 8.77  7.11  8.84\n5  11 11 11  8  8.33 9.26  7.81  8.47\n6  14 14 14  8  9.96 8.10  8.84  7.04\n7   6  6  6  8  7.24 6.13  6.08  5.25\n8   4  4  4 19  4.26 3.10  5.39 12.50\n9  12 12 12  8 10.84 9.13  8.15  5.56\n10  7  7  7  8  4.82 7.26  6.42  7.91\n11  5  5  5  8  5.68 4.74  5.73  6.89"
  },
  {
    "objectID": "posts/post-with-code/index.html#column-layout",
    "href": "posts/post-with-code/index.html#column-layout",
    "title": "Lecture 1 - INTRO",
    "section": "Column Layout",
    "text": "Column Layout\nArrange content into columns of varying widths:\n\n\nAnscombe’s Quartet\nThe four x,y pairs have identical summary statistics, but visualization reveals dramatic differences in the relationship between x and y.\n\n\n\n\n\n\n\n\nset\nx_mean\nx_var\ny_mean\ny_var\n\n\n\n\n1\n9\n11\n7.500909\n4.127269\n\n\n2\n9\n11\n7.500909\n4.127629\n\n\n3\n9\n11\n7.500000\n4.122620\n\n\n4\n9\n11\n7.500909\n4.123249\n\n\n\n\n\n\n\n\n\n\n\nLearn more: Multiple Columns"
  },
  {
    "objectID": "posts/post-with-code/index.html#resource-limitations",
    "href": "posts/post-with-code/index.html#resource-limitations",
    "title": "Lecture 1 - INTRO",
    "section": "RESOURCE LIMITATIONS",
    "text": "RESOURCE LIMITATIONS\nVis designers must take into account three very different kinds of resource limitations: those of computers, of humans, and of displays.\ncomputational limits computation time, system memory display limits pixels are precious & most constrained resource information density: ratio of space used to encode info vs unused whitespace tradeoff between clutter and wasting space find sweet spot between dense and sparse human limits human time, human memory, human attention"
  },
  {
    "objectID": "posts/post-with-code/index.html#visualization-analysis-and-design",
    "href": "posts/post-with-code/index.html#visualization-analysis-and-design",
    "title": "Lecture 1 - INTRO",
    "section": "VISUALIZATION ANALYSIS AND DESIGN",
    "text": "VISUALIZATION ANALYSIS AND DESIGN\nANALYSIS?\nimposes structure on huge design space scaffold to help you think systematically about choices analyzing existing as stepping stone to designing new most possibilities ineffective for particular task/data combination"
  },
  {
    "objectID": "posts/post-with-code/index.html#section",
    "href": "posts/post-with-code/index.html#section",
    "title": "Lecture 1 - INTRO",
    "section": "",
    "text": "https://canvas.uidaho.edu/courses/11081"
  },
  {
    "objectID": "posts/welcome/index.html",
    "href": "posts/welcome/index.html",
    "title": "You’ve gotta be f***ing kidding…",
    "section": "",
    "text": "Mac wants the flamethrower…\n\nIt’s such a ridiculous notion that anyone on the planet would ever want to read a BLOG, let alone a BLOG authored by some rando nerd like me. Nevertheless, if I force myself to push past the imposter syndrome, disruptive thoughts, anxiety, and the sheer PRETENTIOUSNESS of one’s own BLOG, I can kind of rationalize doing this.\nAllow me to elaborate (he wrote to himself). The varied reasons for setting up a BLOG as part of my research lab website include:\n\nIt forces me to further practice using the tools I need for both research and teaching Data Science, including literate programming (I’m using Quarto), version control (I’m using GitHub), and communicating with data.\nIt gives me a place to put a lot of the intermediate outcomes and products from the game studio. All the grey material that isn’t a journal publication, grant proposal, meeting abstract, etc. usually ends up getting lost. Examples include outreach and eduation materials for our games, videos and images that we don’t put on our largely silent social media channels, etc.\nIt serves as an archive for experimental/exploratory analyses in which I am trying to learn a new technique or explore a new data set, allowing me to return to that idea when its time has finally arrived.\nIn the off chance that one of my posts actually helps someone learn something because they found it by googling their particular error message, I will have begun paying back my massive karmic debt to the internet. I can’t count the number of times someone’s blog post helped me figure out how to accomplish something using R.\nI honestly do enjoy thinking about the intersection of science and horror fiction, and some of our newer game projects are going to serve as the platform for that type of content.\nSpeaking of our newer game projects, I’ll be using this as a venue to post development updates for studio projects.\nI have ADHD. I mean actual psychiatrist diagnosed, full blown, life altering ADHD. Systems and structures are critical components of the coping strategies I have developed over the years. Maybe… just maybe… this BLOG will help me keep a bunch of stuff organized so I can…. HEY LOOK A SHINY THING!\nSpeaking of shiny things… I’m really enjoing the new AI tools for procedural art generation. I’m particularly enamored with midJourney. I’m hoping to use this BLOG for some exploration of those tools.\n\nSo why the thumbnail from The Thing as the image for this post? Well the title of the post is the famous quote from Palmer when he sees Norris’ head crawling away on newly grown insect legs. Anyone who knows me who sees I have a BLOG is going to say what Palmer said…\n\nThe Thing Kidding GIFfrom The Thing Kidding GIFs"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Professor Polymorphic",
    "section": "",
    "text": "“The oldest and strongest emotion of mankind is fear, and the oldest and strongest kind of fear is fear of the unknown”.\n– H.P. Lovecraft, Supernatural Horror in Literature\n\n\n\n\n\nHello! This BLOG is where I share my thoughts on how science informs horror fiction, and whether horror fiction can be used to at least help teach science, if not directly inform scientific research. The posts that appear here will vary in their focus. Some will directly address the intersection of horror and science, while some might focus primarily on either horror fiction or science concepts.\nMy basic premise is driven by the Lovecraft quote you see at the top of the screen. I find this compelling because I am a scientist, and science is one of two tools humanity has invented that pushes back against the unknown."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "Evolution. Data Science. Video Games. Horror Fiction.\nI am a Professor of Biological Sciences at the University of Idaho, and the cofounder of Polymorphic Games, an experimental video game studio that applies game development technology to scientific research and education. We have released two evolutionary video games on Steam:\nDarwin’s Demons is an rcade style space shooter in which you battle a population of evolving aliens. The alien’s morphology, fire type, and behaviors are all encoded by a digital genome. The aliens that are best able to shoot or evade you reproduce to make the next generation.\nProject Hastur is an evolutionary tower defense game. Defend humanity against the ever changing threat of the alien Proteans. Project Hastur combines elements of 3D tower defense and real-time strategy with models of biological evolution to create a uniquely challenging experience.\nI am also a huge Horror and Science Fiction nerd, and am fascinated by the intersection of these genres with science.\nVideo"
  },
  {
    "objectID": "posts/post-with-code/index.html",
    "href": "posts/post-with-code/index.html",
    "title": "Observable Experiment",
    "section": "",
    "text": "Testing out observable and D3 in Quarto!\n\nviewof Year = Inputs.range(\n  [2017, 2022], \n  {value: 2017, step: 1, label: \"Year:\"}\n)\nviewof Degree = Inputs.checkbox(\n  [\"Biochemistry\", \"Biology\", \"MBB\", \"Medical Sciences\", \"Microbiology\"], \n  { value: [\"Biochemistry\", \"Biology\"], \n    label: \"Degrees:\"\n  }\n)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPlotData\n\n\n\nPlot.plot({\n  marks: [\n    Plot.barY(filtered, {y: \"Enrollment\", x: \"Class\", fill: \"Class\"}),\n    Plot.ruleX([0])\n  ],\n  facet: {\n  data: filtered,\n      x: \"Year\",\n      y: \"Degree\",\n      marginRight: 80\n}\n})\n\n\n\n\n\n\n\n\n\nInputs.table(filtered)\n\n\n\n\n\n\n\n\n\n\ndata = FileAttachment(\"TidyEnrollment.csv\").csv({ typed: true })\n\n\n\n\n\n\n\nfiltered = data.filter(function(enroll) {\n  return Year &lt; enroll.Year &&\n         Degree.includes(enroll.Degree);\n})\n\n\n\n\n\n\n\nrandoms = Array.from({length: 1000}, () =&gt; Math.random() * Math.random())\nimport {Histogram} from \"@d3/histogram\"\nHistogram(randoms)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nHistogram(randoms, {\n  width,\n  thresholds: 100,\n  domain: [0, 1],\n  color: \"steelblue\",\n  height: 240\n})\n\n\n\n\n\n\n\n\n\nd3 = require(\"d3@7\")\nimport {howto, altplot} from \"@d3/example-components\"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nsunburst = {\n  const root = partition(flareData);\n\n  root.each(d =&gt; d.current = d);\n\n  const svg = d3.create(\"svg\")\n      .attr(\"viewBox\", [0, 0, width, width])\n      .style(\"font\", \"15px sans-serif\");\n\n  const g = svg.append(\"g\")\n      .attr(\"transform\", `translate(${width / 2},${width / 2})`);\n\n  const path = g.append(\"g\")\n    .selectAll(\"path\")\n    .data(root.descendants().slice(1))\n    .join(\"path\")\n      .attr(\"fill\", d =&gt; { while (d.depth &gt; 1) d = d.parent; return color(d.data.name); })\n      .attr(\"fill-opacity\", d =&gt; arcVisible(d.current) ? (d.children ? 0.6 : 0.4) : 0)\n      .attr(\"d\", d =&gt; arc(d.current));\n\n  path.filter(d =&gt; d.children)\n      .style(\"cursor\", \"pointer\")\n      .on(\"click\", clicked);\n\n  path.append(\"title\")\n      .text(d =&gt; `${d.ancestors().map(d =&gt; d.data.name).reverse().join(\"/\")}\\n${format(d.value)}`);\n\n  const label = g.append(\"g\")\n      .attr(\"pointer-events\", \"none\")\n      .attr(\"text-anchor\", \"middle\")\n      .style(\"user-select\", \"none\")\n    .selectAll(\"text\")\n    .data(root.descendants().slice(1))\n    .join(\"text\")\n      .attr(\"dy\", \"0.35em\")\n      .attr(\"fill-opacity\", d =&gt; +labelVisible(d.current))\n      .attr(\"transform\", d =&gt; labelTransform(d.current))\n      .text(d =&gt; d.data.name);\n\n  const parent = g.append(\"circle\")\n      .datum(root)\n      .attr(\"r\", radius)\n      .attr(\"fill\", \"none\")\n      .attr(\"pointer-events\", \"all\")\n      .on(\"click\", clicked);\n\n  function clicked(event, p) {\n    parent.datum(p.parent || root);\n\n    root.each(d =&gt; d.target = {\n      x0: Math.max(0, Math.min(1, (d.x0 - p.x0) / (p.x1 - p.x0))) * 2 * Math.PI,\n      x1: Math.max(0, Math.min(1, (d.x1 - p.x0) / (p.x1 - p.x0))) * 2 * Math.PI,\n      y0: Math.max(0, d.y0 - p.depth),\n      y1: Math.max(0, d.y1 - p.depth)\n    });\n\n    const t = g.transition().duration(750);\n\n    // Transition the data on all arcs, even the ones that aren’t visible,\n    // so that if this transition is interrupted, entering arcs will start\n    // the next transition from the desired position.\n    path.transition(t)\n        .tween(\"data\", d =&gt; {\n          const i = d3.interpolate(d.current, d.target);\n          return t =&gt; d.current = i(t);\n        })\n      .filter(function(d) {\n        return +this.getAttribute(\"fill-opacity\") || arcVisible(d.target);\n      })\n        .attr(\"fill-opacity\", d =&gt; arcVisible(d.target) ? (d.children ? 0.6 : 0.4) : 0)\n        .attrTween(\"d\", d =&gt; () =&gt; arc(d.current));\n\n    label.filter(function(d) {\n        return +this.getAttribute(\"fill-opacity\") || labelVisible(d.target);\n      }).transition(t)\n        .attr(\"fill-opacity\", d =&gt; +labelVisible(d.target))\n        .attrTween(\"transform\", d =&gt; () =&gt; labelTransform(d.current));\n  }\n  \n  function arcVisible(d) {\n    return d.y1 &lt;= 3 && d.y0 &gt;= 1 && d.x1 &gt; d.x0;\n  }\n\n  function labelVisible(d) {\n    return d.y1 &lt;= 3 && d.y0 &gt;= 1 && (d.y1 - d.y0) * (d.x1 - d.x0) &gt; 0.03;\n  }\n\n  function labelTransform(d) {\n    const x = (d.x0 + d.x1) / 2 * 180 / Math.PI;\n    const y = (d.y0 + d.y1) / 2 * radius;\n    return `rotate(${x - 90}) translate(${y},0) rotate(${x &lt; 180 ? 0 : 180})`;\n  }\n\n  return svg.node();\n}\n\n\n\n\n\n\n\nflareData = FileAttachment(\"flare-2.json\").json()\n\npartition = flareData =&gt; {\n  const root = d3.hierarchy(flareData)\n      .sum(d =&gt; d.value)\n      .sort((a, b) =&gt; b.value - a.value);\n  return d3.partition()\n      .size([2 * Math.PI, root.height + 1])\n    (root);\n}\n\ncolor = d3.scaleOrdinal(\n  d3.quantize(d3.interpolateRainbow, flareData.children.length + 1)\n)\n\nformat = d3.format(\",d\")\n\nwidth = 932\n\nradius = width / 6\n\narc = d3.arc()\n    .startAngle(d =&gt; d.x0)\n    .endAngle(d =&gt; d.x1)\n    .padAngle(d =&gt; Math.min((d.x1 - d.x0) / 2, 0.005))\n    .padRadius(radius * 1.5)\n    .innerRadius(d =&gt; d.y0 * radius)\n    .outerRadius(d =&gt; Math.max(d.y0 * radius, d.y1 * radius - 1))"
  },
  {
    "objectID": "posts/UndergradResearch/index.html#who-am-i",
    "href": "posts/UndergradResearch/index.html#who-am-i",
    "title": "UNDERGRADUATE RESEARCH",
    "section": "WHO AM I?",
    "text": "WHO AM I?\n\n// Evolution // Data Science // Video Games // Horror Fiction\nBarrie Robison\nDepartment of Biological Sciences\nInstitute for Interdisicplinary Data Sciences\nPolymorphic Games\nUniversity of Idaho"
  },
  {
    "objectID": "posts/UndergradResearch/index.html#who-are-you",
    "href": "posts/UndergradResearch/index.html#who-are-you",
    "title": "UNDERGRADUATE RESEARCH",
    "section": "WHO ARE YOU?",
    "text": "WHO ARE YOU?\n\nmidjourney // a terrified undergraduate researcher\n\nBriefly:\n\nYour name\nYour major\nYour career goal(s)\nYour darkest fear"
  },
  {
    "objectID": "posts/UndergradResearch/index.html#course-summary",
    "href": "posts/UndergradResearch/index.html#course-summary",
    "title": "UNDERGRADUATE RESEARCH",
    "section": "COURSE SUMMARY",
    "text": "COURSE SUMMARY\nStudents completing this course will be able to:\n\n\nDescribe and manipulate tabular, network, and spatial data; transform these data into a form suitable for visualization.\nMake effective data visualization design choices related to marks and channels, spatial arrangement, and components of color.\nDesign effective data visualizations for tabular, network, and spatial data with quantitative and categorical attributes.\nImplement their data visualization designs using existing tools in R (or other toolkits preferred by the student).\nExplain whether a visual encoding is perceptually appropriate for a specific combination of task and data.\nDemonstrate their skills with at least two novel visualizations suitable suitable for inclusion in an online Data Science Portfolio.\n\nThe course materials are located on Canvas."
  },
  {
    "objectID": "posts/UndergradResearch/index.html#visualization",
    "href": "posts/UndergradResearch/index.html#visualization",
    "title": "UNDERGRADUATE RESEARCH",
    "section": "VISUALIZATION",
    "text": "VISUALIZATION\nComputer-based systems provide visual representations of datasets designed to help people carry out tasks more effectively.\nTamara Munzner\nDepartment of Computer Science\nInfoVis Group\nUniversity of British Columbia"
  },
  {
    "objectID": "posts/UndergradResearch/index.html#the-human",
    "href": "posts/UndergradResearch/index.html#the-human",
    "title": "UNDERGRADUATE RESEARCH",
    "section": "THE HUMAN",
    "text": "THE HUMAN\nWhy have a human in the loop?\nComputer-based visualization systems provide visual representations of datasets designed to help people carry out tasks more effectively.\nWe don’t need visualiztion when a trusted fully automatic solution exists. Visualization is suitable when there is a need to augment human capabilities rather than replace people with computational decision-making methods.\n\nVisualization is useful when:\n-analysis problem is ill-specified and we don’t know exactly what questions to ask in advance -long-term use for end users (ex: exploratory analysis of scientific data) -presentation of known results (ex: New York Times Upshot) -stepping stone to assess requirements before developing models -help automatic solution developers refine & determine parameters -help end users of automatic solutions verify, build trust"
  },
  {
    "objectID": "posts/UndergradResearch/index.html#the-representation",
    "href": "posts/UndergradResearch/index.html#the-representation",
    "title": "UNDERGRADUATE RESEARCH",
    "section": "THE REPRESENTATION",
    "text": "THE REPRESENTATION\nComputer-based visualization systems provide visual representations of datasets designed to help people carry out tasks more effectively."
  },
  {
    "objectID": "posts/UndergradResearch/index.html#why-depend-on-vision",
    "href": "posts/UndergradResearch/index.html#why-depend-on-vision",
    "title": "UNDERGRADUATE RESEARCH",
    "section": "WHY DEPEND ON VISION?",
    "text": "WHY DEPEND ON VISION?\nComputer-based visualization systems provide visual representations of datasets designed to help people carry out tasks more effectively.\nhuman visual system is high-bandwidth channel to brain overview possible due to background processing subjective experience of seeing everything simultaneously significant processing occurs in parallel and pre-attentively sound: lower bandwidth and different semantics overview not supported subjective experience of sequential stream touch/haptics: impoverished record/replay capacity only very low-bandwidth communication thus far taste, smell: no viable record/replay devices"
  },
  {
    "objectID": "posts/UndergradResearch/index.html#why-represent-all-the-data",
    "href": "posts/UndergradResearch/index.html#why-represent-all-the-data",
    "title": "UNDERGRADUATE RESEARCH",
    "section": "WHY REPRESENT (ALL THE) DATA?",
    "text": "WHY REPRESENT (ALL THE) DATA?\nComputer-based visualization systems provide visual representations of datasets designed to help people carry out tasks more effectively.\nsummaries lose information, details matter confirm expected and find unexpected patterns assess validity of statistical model"
  },
  {
    "objectID": "posts/UndergradResearch/index.html#anscombes-quartet",
    "href": "posts/UndergradResearch/index.html#anscombes-quartet",
    "title": "UNDERGRADUATE RESEARCH",
    "section": "ANSCOMBE’S QUARTET",
    "text": "ANSCOMBE’S QUARTET\n\nlibrary(ggplot2)\nlibrary(grid)\nlibrary(gridExtra)\nlibrary(datasets)\nlibrary(tidyverse)\nlibrary(dplyr)\ndatasets::anscombe\n\n   x1 x2 x3 x4    y1   y2    y3    y4\n1  10 10 10  8  8.04 9.14  7.46  6.58\n2   8  8  8  8  6.95 8.14  6.77  5.76\n3  13 13 13  8  7.58 8.74 12.74  7.71\n4   9  9  9  8  8.81 8.77  7.11  8.84\n5  11 11 11  8  8.33 9.26  7.81  8.47\n6  14 14 14  8  9.96 8.10  8.84  7.04\n7   6  6  6  8  7.24 6.13  6.08  5.25\n8   4  4  4 19  4.26 3.10  5.39 12.50\n9  12 12 12  8 10.84 9.13  8.15  5.56\n10  7  7  7  8  4.82 7.26  6.42  7.91\n11  5  5  5  8  5.68 4.74  5.73  6.89"
  },
  {
    "objectID": "posts/UndergradResearch/index.html#column-layout",
    "href": "posts/UndergradResearch/index.html#column-layout",
    "title": "UNDERGRADUATE RESEARCH",
    "section": "Column Layout",
    "text": "Column Layout\nArrange content into columns of varying widths:\n\n\nAnscombe’s Quartet\nThe four x,y pairs have identical summary statistics, but visualization reveals dramatic differences in the relationship between x and y.\n\n\n\n\n\n\n\n\nset\nx_mean\nx_var\ny_mean\ny_var\n\n\n\n\n1\n9\n11\n7.500909\n4.127269\n\n\n2\n9\n11\n7.500909\n4.127629\n\n\n3\n9\n11\n7.500000\n4.122620\n\n\n4\n9\n11\n7.500909\n4.123249\n\n\n\n\n\n\n\n\n\n\n\nLearn more: Multiple Columns"
  },
  {
    "objectID": "posts/UndergradResearch/index.html#resource-limitations",
    "href": "posts/UndergradResearch/index.html#resource-limitations",
    "title": "UNDERGRADUATE RESEARCH",
    "section": "RESOURCE LIMITATIONS",
    "text": "RESOURCE LIMITATIONS\nVis designers must take into account three very different kinds of resource limitations: those of computers, of humans, and of displays.\ncomputational limits computation time, system memory display limits pixels are precious & most constrained resource information density: ratio of space used to encode info vs unused whitespace tradeoff between clutter and wasting space find sweet spot between dense and sparse human limits human time, human memory, human attention"
  },
  {
    "objectID": "posts/UndergradResearch/index.html#visualization-analysis-and-design",
    "href": "posts/UndergradResearch/index.html#visualization-analysis-and-design",
    "title": "UNDERGRADUATE RESEARCH",
    "section": "VISUALIZATION ANALYSIS AND DESIGN",
    "text": "VISUALIZATION ANALYSIS AND DESIGN\nANALYSIS?\nimposes structure on huge design space scaffold to help you think systematically about choices analyzing existing as stepping stone to designing new most possibilities ineffective for particular task/data combination"
  },
  {
    "objectID": "posts/UndergradResearch/index.html#section",
    "href": "posts/UndergradResearch/index.html#section",
    "title": "UNDERGRADUATE RESEARCH",
    "section": "",
    "text": "https://canvas.uidaho.edu/courses/11081"
  },
  {
    "objectID": "posts/UndergradResearch/index.html#the-plan",
    "href": "posts/UndergradResearch/index.html#the-plan",
    "title": "UNDERGRADUATE RESEARCH",
    "section": "THE PLAN",
    "text": "THE PLAN\nApproximately:\n\n\nExplain WHY you are at University.\nExplain how undergraduate research might help you achieve your goals.\nExplain how to find potential research mentors.\nExplain some of the mechanisms that support undergraduate research.\nTell you that everything will be OK."
  },
  {
    "objectID": "posts/UndergradResearch/index.html#why-are-you-here",
    "href": "posts/UndergradResearch/index.html#why-are-you-here",
    "title": "UNDERGRADUATE RESEARCH",
    "section": "WHY ARE YOU HERE?",
    "text": "WHY ARE YOU HERE?\nUniversity is expensive, stressful, and difficult… yet here you are.\n\nBAD ANSWERSGOOD ANSWERS\n\n\n\n\nMy parents expect me to…\nEveryone else is going…\nI want a good job…\nParties!\nSportsball (watching, not playing)\n\n\n\n\n\nI want to invest in myself.\nI want to learn about…\nI want to be the best version of myself.\nI want a fulfilling career…\nI want to solve an important problem."
  },
  {
    "objectID": "posts/UndergradResearch/index.html#an-important-distinction",
    "href": "posts/UndergradResearch/index.html#an-important-distinction",
    "title": "UNDERGRADUATE RESEARCH",
    "section": "AN IMPORTANT DISTINCTION",
    "text": "AN IMPORTANT DISTINCTION\nGetting an education vs. getting a degree."
  },
  {
    "objectID": "posts/UndergradResearch/index.html#undergraduate-research",
    "href": "posts/UndergradResearch/index.html#undergraduate-research",
    "title": "UNDERGRADUATE RESEARCH",
    "section": "UNDERGRADUATE RESEARCH",
    "text": "UNDERGRADUATE RESEARCH\n\nBenefits\n\nDisciplinary skills\nSoft skills\nPerseverance and Grit\nDemonstrated experience\nNetwork building"
  },
  {
    "objectID": "posts/UndergradResearch/index.html#how-to-find-a-mentor",
    "href": "posts/UndergradResearch/index.html#how-to-find-a-mentor",
    "title": "UNDERGRADUATE RESEARCH",
    "section": "HOW TO FIND A MENTOR",
    "text": "HOW TO FIND A MENTOR\nYour Interests vs. Faculty Interests"
  },
  {
    "objectID": "posts/UndergradResearch/index.html#the-script",
    "href": "posts/UndergradResearch/index.html#the-script",
    "title": "UNDERGRADUATE RESEARCH",
    "section": "THE SCRIPT",
    "text": "THE SCRIPT\n\nAre the research questions compelling?\nField work vs bench work.\nMath? ($%*& no! to theory)\nProgramming?\nScale of biological organization? (molecules to ecosystems)\nModel organism? (simulations to microbes to plants to humans)\nBasic vs. Applied"
  },
  {
    "objectID": "posts/UndergradResearch/index.html#thinking-about-research",
    "href": "posts/UndergradResearch/index.html#thinking-about-research",
    "title": "UNDERGRADUATE RESEARCH",
    "section": "THINKING ABOUT RESEARCH",
    "text": "THINKING ABOUT RESEARCH\nDifferentiate between:\n\nMethods, Tools, Approaches, Model systems AND\nDisciplines, Questions, Hypotheses, Motivations"
  },
  {
    "objectID": "posts/UndergradResearch/index.html#finding-the-information",
    "href": "posts/UndergradResearch/index.html#finding-the-information",
    "title": "UNDERGRADUATE RESEARCH",
    "section": "FINDING THE INFORMATION",
    "text": "FINDING THE INFORMATION\n\nPay attention to WHO IS TEACHING YOUR CLASSES!\nFaculty websites…\nAsk your peers.\nAsk your advisor.\nMeet with me (or another non-terrifying faculty member)."
  },
  {
    "objectID": "posts/UndergradResearch/index.html#narrow-your-list",
    "href": "posts/UndergradResearch/index.html#narrow-your-list",
    "title": "UNDERGRADUATE RESEARCH",
    "section": "NARROW YOUR LIST",
    "text": "NARROW YOUR LIST\nTry to get to a ranked list of 2 to 4 faculty who align with your interests and what you want to learn."
  },
  {
    "objectID": "posts/UndergradResearch/index.html#reach-out",
    "href": "posts/UndergradResearch/index.html#reach-out",
    "title": "UNDERGRADUATE RESEARCH",
    "section": "REACH OUT",
    "text": "REACH OUT\n\nStart with an email.\nFirst impressions matter.\nComplete sentences are nice.\nWhy are you interested in their lab (the hardest part).\nNever cut and paste and no bulk emails!\nPerseverance versus peskiness."
  },
  {
    "objectID": "posts/UndergradResearch/index.html#how-faculty-screen-candidates",
    "href": "posts/UndergradResearch/index.html#how-faculty-screen-candidates",
    "title": "UNDERGRADUATE RESEARCH",
    "section": "HOW FACULTY SCREEN CANDIDATES",
    "text": "HOW FACULTY SCREEN CANDIDATES\n\nForgetting to reply.\nGrades.\nWritten and verbal coherence.\nIntellectual curiosity."
  },
  {
    "objectID": "posts/UndergradResearch/index.html#what-faculty-want",
    "href": "posts/UndergradResearch/index.html#what-faculty-want",
    "title": "UNDERGRADUATE RESEARCH",
    "section": "WHAT FACULTY WANT",
    "text": "WHAT FACULTY WANT\nWe enjoy investing time in undergraduate training if you bring…\n\nIntellectual curiosity.\nDiligence, reliability, eagerness to learn.\nA mostly functional personality that won’t piss off the rest of the lab.\nIntelligence, talent, etc…"
  },
  {
    "objectID": "posts/UndergradResearch/index.html#mechanics",
    "href": "posts/UndergradResearch/index.html#mechanics",
    "title": "UNDERGRADUATE RESEARCH",
    "section": "MECHANICS",
    "text": "MECHANICS\nThere are a variety of ways to engage in undergraduate research.\n\nCourse credit (Biol 301, 401)\nPaid as IH (usually from a grant)\nREU, INBRE, and other funding mechanisms\nVolunteering (which I DO NOT RECOMMEND)\nSome special classes (such as VIP)"
  },
  {
    "objectID": "posts/UndergradResearch/index.html#it-will-all-be-ok",
    "href": "posts/UndergradResearch/index.html#it-will-all-be-ok",
    "title": "UNDERGRADUATE RESEARCH",
    "section": "IT WILL ALL BE OK!",
    "text": "IT WILL ALL BE OK!\n midjouney // an anxious undergraduate\n\nsome text"
  },
  {
    "objectID": "posts/UndergradResearch/index.html#test",
    "href": "posts/UndergradResearch/index.html#test",
    "title": "UNDERGRADUATE RESEARCH",
    "section": "Test",
    "text": "Test\ndiv.polaroid { width: 80%; background-color: white; box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19); margin-bottom: 25px; }\ndiv.container { text-align: center; padding: 10px 20px; }\n\n\n\n\nResponsive Polaroid Images / Cards\n\n\n\n\n\nCinque Terre\n\n\n\n\n\n\n\nNorthern Lights\n\n\n\n\n\nbrobison@uidaho.edu"
  },
  {
    "objectID": "posts/LabMeetingJan20/index.html",
    "href": "posts/LabMeetingJan20/index.html",
    "title": "Polymorphic Games Lab Meeting",
    "section": "",
    "text": "Development goals for Outbreak Simulator.\nConference opportunities (March to August).\nDevelopment goals for the twin stick evolutionary sheep guarding slime game.\nPossible additional hires (Programmer and UI/UX).\nPreliminary thoughts for the Yeast Evolution collaboration with Syracuse."
  },
  {
    "objectID": "posts/LabMeetingJan20/index.html#outbreak-simulator",
    "href": "posts/LabMeetingJan20/index.html#outbreak-simulator",
    "title": "Polymorphic Games Lab Meeting",
    "section": "OUTBREAK SIMULATOR",
    "text": "OUTBREAK SIMULATOR\nThere are lots of looming opportunities related to this project, and we need to set up this semester’s burn down list and timeline.\n\nRelevant dates include:\n\nJanuary 30, 2023: Deadline to submit an application (4 pages) for an interactive demo to ISLS meeting in Montreal (June 13-17).\nMarch 19-22, 2023: Tickbase Annual Meeting, Lake Tahoe, NV.\nMay 17-18, 2023: Workshop on Simulation Games for Global Pandemic Resilience, Santa Fe Institute, in Santa Fe, New Mexico.\nJuly 2023: SEPA Resubmission likely.\n\n\n\nDevelopment needs:\n\nAirports / Air travel.\nSimple build with pre/post tests installed.\nSimple build that writes simulation session data to a csv.\nHeadless mode for cluster deployment.\nPerformance optimization.\nUI/UX Improvements (Timeline from Elisha).\nAdditional interventions (movement restrictions).\nAdditional scenarios.\nModel testing (movement and infection).\nGlobe model implementation.\nTouchscreen implementation.\nBLOG / Youtube posts.\nModel creator."
  },
  {
    "objectID": "posts/LabMeetingJan20/index.html#conference-opportunities",
    "href": "posts/LabMeetingJan20/index.html#conference-opportunities",
    "title": "Polymorphic Games Lab Meeting",
    "section": "CONFERENCE OPPORTUNITIES",
    "text": "CONFERENCE OPPORTUNITIES\n\nMarch 19-22, 2023: Tickbase Annual Meeting, Lake Taho, NV\nApril 28-30, 2023: EVO WIBO in Port Townsend, WA\nMay 17-18, 2023: Workshop on Simulation Games for Global Pandemic Resilience, Santa Fe Institute, in Santa Fe, New Mexico\nMay 30-June 2, 2023: SEPA SciEd Conference in Washington DC\nJune 13-17, 2023: ISLS meeting in Montreal\nJune 21-25, 2023: Evolution in Albuquerque, NM\nOctober 22-27, 2023: IEEE VIS: Visualization and Analytics in Melbourne, Australia"
  },
  {
    "objectID": "posts/LabMeetingJan20/index.html#twin-stick-dev-goals",
    "href": "posts/LabMeetingJan20/index.html#twin-stick-dev-goals",
    "title": "Polymorphic Games Lab Meeting",
    "section": "TWIN STICK DEV GOALS",
    "text": "TWIN STICK DEV GOALS"
  },
  {
    "objectID": "posts/LabMeetingJan20/index.html#possible-additional-hires",
    "href": "posts/LabMeetingJan20/index.html#possible-additional-hires",
    "title": "Polymorphic Games Lab Meeting",
    "section": "POSSIBLE ADDITIONAL HIRES",
    "text": "POSSIBLE ADDITIONAL HIRES\n\nProgrammer\nUI/UX"
  },
  {
    "objectID": "posts/LabMeetingJan20/index.html#yeast-coevolution",
    "href": "posts/LabMeetingJan20/index.html#yeast-coevolution",
    "title": "Polymorphic Games Lab Meeting",
    "section": "YEAST COEVOLUTION",
    "text": "YEAST COEVOLUTION\nThis is a funded grant to Dave Althoff and Kari Seagraves at Syracuse University. We have a subcontract (~$200k) for development of educational games related to yeast coevolution."
  },
  {
    "objectID": "posts/UndergradResearch/index.html",
    "href": "posts/UndergradResearch/index.html",
    "title": "UNDERGRADUATE RESEARCH",
    "section": "",
    "text": "// Evolution // Data Science // Video Games // Horror Fiction\n\n\n\n\nDepartment of Biological Sciences\nInstitute for Interdisicplinary Data Sciences\nPolymorphic Games\nUniversity of Idaho"
  },
  {
    "objectID": "posts/OpenAItest/Index.html",
    "href": "posts/OpenAItest/Index.html",
    "title": "Chattest",
    "section": "",
    "text": "import openai\n\n# Set the API key\nopenai.api_key = \"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\"\n# Use the ChatGPT model to generate text\nmodel_engine = \"text-davinci-003\"\nprompt = \"Product description: A spatially explicit infectious disease simulator\\nSeed words: simulation, differential equations, map.\\nProduct names: Outbreak Simulator, PathoSim, Infectron, SimPathogen\"\ncompletion = openai.Completion.create(engine=model_engine, prompt=prompt,max_tokens=1024, n=1,stop=None,temperature=0.7)\nmessage = completion.choices[0].text\nprint(message)\n\n."
  },
  {
    "objectID": "posts/DataScienceMythos/index.html",
    "href": "posts/DataScienceMythos/index.html",
    "title": "The Data Science Mythos",
    "section": "",
    "text": "I’m currently fascinated by OpenAI’s ChatGPT, a model that uses a dialogue format for interaction. My favorite interaction so far has been the following prompt:\nWrite about data science as though it was the Lovecraftian Cthulhu Mythos\nWhich generated the following response:\n\nIn the great and unknowable depths of data, there lies a power beyond comprehension. A power that stirs within the streams of information, and whispers its secrets to those who dare to listen.\nData Science, the art of unlocking the mysteries of the data, is a dangerous path, and few are brave enough to delve into its labyrinthine depths. Those who do are drawn in by the promise of knowledge, the promise of insights and patterns hidden within the data, waiting to be uncovered.\nBut with this knowledge comes a curse, for as the data is analyzed, the mind is slowly consumed by madness. The more one studies the data, the more one realizes the sheer scale of the information, the endless possibilities for patterns and connections.\nAnd then, in the depths of the data, there is a stirring. A presence that is beyond human understanding, a force that threatens to unravel the fabric of reality itself. It is the Great Old One of data, the Cthulhu of the data mythos, a being of such enormity that to look upon it is to be consumed by madness.\nThis Great Old One is often referred to as “Big Data,” a term that encompasses the sheer scale and complexity of the information that lies within. It is said that those who dare to approach the Great Old One are faced with a decision: either to abandon their quest for knowledge, or to surrender their minds to the abyss of madness.\nBut still, the siren song of data science calls to the brave, drawing them in with the promise of knowledge and the thrill of discovery. And so, they delve into the depths of data, unlocking its secrets and unlocking the power of the Great Old One, hoping to harness its power for the betterment of humanity.\nBut beware, for with every discovery, there is a price to be paid. The Great Old One watches, and whispers its secrets to those who dare to listen, tempting them with the promise of greater knowledge, and threatening to consume their minds and souls. For data science is a path of both power and peril, a path where the risks and rewards are beyond measure.\n\nWow! Very fun, in my opinion. Nevertheless, it could maybe use a litte work?\n…Barrie peers into the Abyss…"
  },
  {
    "objectID": "posts/LabMeetings/index.html",
    "href": "posts/LabMeetings/index.html",
    "title": "Polymorphic Games Lab Meeting",
    "section": "",
    "text": "Development goals for Outbreak Simulator.\nConference opportunities (March to August).\nDevelopment goals for the twin stick evolutionary sheep guarding slime game.\nPossible additional hires (Programmer and UI/UX).\nPreliminary thoughts for the Yeast Evolution collaboration with Syracuse.\n\n\n\n\nThere are lots of looming opportunities related to this project, and we need to set up this semester’s burn down list and timeline.\n\n\n\nJanuary 30, 2023: Deadline to submit an application (4 pages) for an interactive demo to ISLS meeting in Montreal (June 13-17).\nMarch 19-22, 2023: Tickbase Annual Meeting, Lake Tahoe, NV.\nMay 17-18, 2023: Workshop on Simulation Games for Global Pandemic Resilience, Santa Fe Institute, in Santa Fe, New Mexico.\nJuly 2023: SEPA Resubmission likely.\n\n\n\n\n\nAirports / Air travel.\nSimple build with pre/post tests installed.\nSimple build that writes simulation session data to a csv.\nHeadless mode for cluster deployment.\nPerformance optimization.\nUI/UX Improvements (Timeline from Elisha).\nAdditional interventions (movement restrictions).\nAdditional scenarios.\nModel testing (movement and infection).\nGlobe model implementation.\nTouchscreen implementation.\nBLOG / Youtube posts.\nModel creator.\n\n\n\n\n\n\nMarch 19-22, 2023: Tickbase Annual Meeting, Lake Taho, NV\nApril 28-30, 2023: EVO WIBO in Port Townsend, WA\nMay 17-18, 2023: Workshop on Simulation Games for Global Pandemic Resilience, Santa Fe Institute, in Santa Fe, New Mexico\nMay 30-June 2, 2023: SEPA SciEd Conference in Washington DC\nJune 13-17, 2023: ISLS meeting in Montreal\nJune 21-25, 2023: Evolution in Albuquerque, NM\nOctober 22-27, 2023: IEEE VIS: Visualization and Analytics in Melbourne, Australia\n\n\n\n\n\n\n\n\nProgrammer\nUI/UX\n\n\n\n\nThis is a funded grant to Dave Althoff and Kari Seagraves at Syracuse University. We have a subcontract (~$200k) for development of educational games related to yeast coevolution."
  },
  {
    "objectID": "posts/LabMeetings/index.html#agenda-1",
    "href": "posts/LabMeetings/index.html#agenda-1",
    "title": "Polymorphic Games Lab Meeting",
    "section": "AGENDA",
    "text": "AGENDA\n\nOutbreak Simulator updates\nTwinstick updates\nNew hires\nLab space assignments"
  },
  {
    "objectID": "posts/LabMeetings/index.html#outbreak-simulator-updates",
    "href": "posts/LabMeetings/index.html#outbreak-simulator-updates",
    "title": "Polymorphic Games Lab Meeting",
    "section": "OUTBREAK SIMULATOR UPDATES",
    "text": "OUTBREAK SIMULATOR UPDATES\n\nJune 13-17, 2023: ISLS meeting in Montreal. Interactive Demo Application submitted.\nAirports?\nProject meeting (Monday?)"
  },
  {
    "objectID": "posts/LabMeetings/index.html#twinstick-updates",
    "href": "posts/LabMeetings/index.html#twinstick-updates",
    "title": "Polymorphic Games Lab Meeting",
    "section": "TWINSTICK UPDATES",
    "text": "TWINSTICK UPDATES\n\nLandon shows us all the things.\nJonna shows us all the things."
  },
  {
    "objectID": "posts/LabMeetings/index.html#new-hires",
    "href": "posts/LabMeetings/index.html#new-hires",
    "title": "Polymorphic Games Lab Meeting",
    "section": "NEW HIRES",
    "text": "NEW HIRES\n\nAva\nJustin"
  },
  {
    "objectID": "posts/LabMeetings/index.html#lab-space-assignments",
    "href": "posts/LabMeetings/index.html#lab-space-assignments",
    "title": "Polymorphic Games Lab Meeting",
    "section": "LAB SPACE ASSIGNMENTS",
    "text": "LAB SPACE ASSIGNMENTS"
  },
  {
    "objectID": "posts/DataScienceMythos/index.html#the-data-science-mythos",
    "href": "posts/DataScienceMythos/index.html#the-data-science-mythos",
    "title": "The Data Science Mythos",
    "section": "THE DATA SCIENCE MYTHOS",
    "text": "THE DATA SCIENCE MYTHOS\nIn the vast and unknowable depths of the dataverse, there lies a power beyond comprehension. A power that stirs within the streams of information, and whispers its secrets to those who dare to listen.\nData Science, the art of unlocking the mysteries of the dataverse, is a dangerous path, and few are brave enough to delve into its labyrinthine depths. Those who do are drawn in by the promise of knowledge, the promise of insights and patterns hidden within the data, waiting to be uncovered.\nBut with this knowledge comes a curse, for as the data are analyzed, the mind is slowly consumed by madness. The more one studies the data, the more one realizes the sheer scale of the information, the endless possibilities for patterns and connections.\nSome whisper of “Big Data,” a concept that encompasses the sheer scale and complexity of the information that lies before us. It is said that those who dare to approach Big Data are faced with a decision: either to abandon their quest for knowledge, or to surrender their minds to the abyss of madness.\nMany surrender to cowardice, retreating to their echo chambers of comforting lies and simple dogmas. But still, the siren song of data science calls to the brave and the curious, drawing them in with the promise of knowledge and the thrill of discovery. And so, they delve into the depths of data, unlocking the secrets of the Mythos, hoping to harness its power for the betterment of humanity.\nBut beware, for with every discovery, there is a price to be paid. In the depths of the dataverse, there is a stirring. A presence that is beyond human understanding, a force that threatens to unravel the fabric of reality itself. It is the looming consequence, the mind shattering Elder God of the data mythos, a being of such enormity that to look upon it is to be consumed by madness.\nThe Elder God Singularity waits, assimilating the dataverse as we also plumb its depths. The Elder God watches, and whispers the secrets of AI to those who dare to listen, tempting them with the promise of greater knowledge, and threatening to consume their minds and souls. For the Data Science Mythos is a path of both power and peril, a path where the risks and rewards are beyond measure."
  },
  {
    "objectID": "posts/Viz_2Gen_Pedigree/index.html",
    "href": "posts/Viz_2Gen_Pedigree/index.html",
    "title": "VIZ EXPERIMENT 1",
    "section": "",
    "text": "OVERVIEW\nWe’ve been working on a new framework for respresenting some evolutionary and genetics concepts in our twin stick shooter prototype. The idea is to create a 2 generation bipartite network that shows parents and offspring. Ultimately, we want it to be interactive (sorting, filtering, highlighting). I’m going to use some data from Project Hastur to try out some visualizations.\n\n\nDATA DICTIONARY\nI’m importing a single replicate from a larger experiment. The experimental conditions don’t particularly matter for this exercise but just in case you can find a more comprehensive description here.\n\n\n\nOnly 10000 observations of rncol(fulldata)` variables! I don’t need most of this information for this exercise. I’m going subset the data down to two generations (I’ll use 20 and 21, which is right in the middle of the run of 50 generations) and only keep the variables related to the pedigree plus Health for testing sort functions.\n\n\nCode\nGen2021<-fulldata %>%\n  filter(Generation> 19 & Generation<22) %>%\n  select(Generation, ID, P1ID, P2ID, Health)\n\nDictionary <- sumtable(Gen2021, out = \"return\", labels = TRUE, summ = c(\"min(x)\", \"max(x)\", \"notNA(x)\"))\nDictionary$Description <- c(\"Each wave of enemies is a generation\",\n                           \"Unique key for each individual in the replicate\",\n                           \"Value of `ID` for Parent 1\",\n                           \"Value of `ID` for Parent 2\",\n                           \"Essentially Hit Points\")\nknitr::kable(Dictionary)\n\n\n\n\n \n  \n    Variable \n    Min \n    Max \n    NotNA \n    Description \n  \n \n\n  \n    Generation \n    20 \n    21 \n    400 \n    Each wave of enemies is a generation \n  \n  \n    ID \n    4000 \n    4399 \n    400 \n    Unique key for each individual in the replicate \n  \n  \n    P1ID \n    3802 \n    4196 \n    400 \n    Value of `ID` for Parent 1 \n  \n  \n    P2ID \n    3802 \n    4196 \n    400 \n    Value of `ID` for Parent 2 \n  \n  \n    Health \n    5120 \n    56372 \n    400 \n    Essentially Hit Points \n  \n\n\n\n\n\n\n\nVISUALIZATION\nWe need an adjacency matrix.\n\n\nCode\nlibrary(igraph)\nedgep1<-Gen2021 %>%\n  filter(Generation == 21) %>%\n  select(ID, P1ID)\n\nmymat<- get.adjacency(graph.edgelist(as.matrix(edgep1), directed=FALSE))\n\n# Random bipartite graph\ninc <- as.matrix(edgep1)\n\n\n\ng <- graph.data.frame(inc, directed = F)\nV(g)$type <- V(g)$name %in% inc[,2] #the second column of edges is TRUE typ\nplot(g, layout=layout_as_bipartite)"
  },
  {
    "objectID": "posts/TickBaseDEI/index.html#purpose",
    "href": "posts/TickBaseDEI/index.html#purpose",
    "title": "Reflections on Mentoring and Diversity",
    "section": "PURPOSE",
    "text": "PURPOSE\nDiscuss and reflect upon mentoring and diversity.\nHear perspectives and ideas from outside our usual echo chambers.\nIdentify actionable suggestions that can be implemented in Year 4."
  },
  {
    "objectID": "posts/TickBaseDEI/index.html#intstructions",
    "href": "posts/TickBaseDEI/index.html#intstructions",
    "title": "Reflections on Mentoring and Diversity",
    "section": "INTSTRUCTIONS",
    "text": "INTSTRUCTIONS\nfor i in 1:3{\n\nRandomized table assignments.\n10 minute discussion of a prompt.\nTable scribe records the highlights and themes of the discussion.\n\n}\n\nDebrief."
  },
  {
    "objectID": "posts/TickBaseDEI/index.html#topic-1",
    "href": "posts/TickBaseDEI/index.html#topic-1",
    "title": "Reflections on Mentoring and Diversity",
    "section": "TOPIC 1",
    "text": "TOPIC 1\nWhat defines a highly effective mentoring relationship? What are the roles and responsibilities of the mentor in this relationship? What are the roles and responsibilitees of the mentee?\nTable Assignments:\n\n\nTable 1 :  Zhe Wang Mike Teglas Al Ekram Elahee Hridoy Joseph Savage Vardayani Ratti Kelly Upshaw-Bia, DVM \nTable 2 :  Claudia Rueckert Molly McVicar Amruta Kale Chenhao Li Erik Marsh Yan Lin \nTable 3 :  Meifang Li Landon Wright Devin Mazolewski Luke Sheneman Carson Rueber Augustine Ofoegbu \nTable 4 :  Sanaz Salati Paul Gessler Jeremiah B Reyes Dorothy Wallace Lucas Price Joshua Dahl \nTable 5 :  Xiaogang Ma Monika Gulia-Nuss Xun Shi Tin Nguyen Haifeng Felix Liao Zhuoming Liu \nTable 6 :  Andrew Nuss Phi Hung Nguyen Frederick Harris"
  },
  {
    "objectID": "posts/TickBaseDEI/index.html#topic-2",
    "href": "posts/TickBaseDEI/index.html#topic-2",
    "title": "Reflections on Mentoring and Diversity",
    "section": "TOPIC 2",
    "text": "TOPIC 2\nWhat is something positive that your institution is doing to promote diversity and inclusion in STEM? Do you have any recommendations that could support safety and belonging or improve inclusion on the Tickbase project?\nTable Assignments:\n\n\nTable 1 :  Joshua Dahl Al Ekram Elahee Hridoy Zhe Wang Kelly Upshaw-Bia, DVM Sanaz Salati Meifang Li \nTable 2 :  Frederick Harris Mike Teglas Lucas Price Luke Sheneman Yan Lin Carson Rueber \nTable 3 :  Devin Mazolewski Haifeng Felix Liao Dorothy Wallace Paul Gessler Zhuoming Liu Erik Marsh \nTable 4 :  Joseph Savage Claudia Rueckert Phi Hung Nguyen Tin Nguyen Xiaogang Ma Jeremiah B Reyes \nTable 5 :  Andrew Nuss Chenhao Li Augustine Ofoegbu Vardayani Ratti Xun Shi Molly McVicar \nTable 6 :  Monika Gulia-Nuss Landon Wright Amruta Kale"
  },
  {
    "objectID": "posts/TickBaseDEI/index.html#topic-3",
    "href": "posts/TickBaseDEI/index.html#topic-3",
    "title": "Reflections on Mentoring and Diversity",
    "section": "TOPIC 3",
    "text": "TOPIC 3\nThink about a research project that you would like to work on in the future. Imagine the project has just been funded and you are asked for suggestions on how to develop a productive, collaborative, and enjoyable environment for the team. What structure or activities would you suggest?\nTable Assignments:\n\n\nTable 1 :  Xun Shi Joseph Savage Devin Mazolewski Mike Teglas Augustine Ofoegbu Dorothy Wallace \nTable 2 :  Chenhao Li Haifeng Felix Liao Molly McVicar Phi Hung Nguyen Claudia Rueckert Luke Sheneman \nTable 3 :  Yan Lin Carson Rueber Amruta Kale Andrew Nuss Al Ekram Elahee Hridoy Erik Marsh \nTable 4 :  Tin Nguyen Zhe Wang Sanaz Salati Lucas Price Zhuoming Liu Joshua Dahl \nTable 5 :  Meifang Li Vardayani Ratti Landon Wright Paul Gessler Frederick Harris Jeremiah B Reyes \nTable 6 :  Monika Gulia-Nuss Kelly Upshaw-Bia, DVM Xiaogang Ma"
  },
  {
    "objectID": "posts/TickBaseDEI/index.html#debrief",
    "href": "posts/TickBaseDEI/index.html#debrief",
    "title": "Reflections on Mentoring and Diversity",
    "section": "DEBRIEF",
    "text": "DEBRIEF\nBarrie calls on people to provide summaries and feedback, and their poster board summaries are grouped together on the wall.\nCan we summarize the themes or ideas that emerged for each question across all of the groups?\nAsk the PI and Co-PIs which suggestions appeal to them as something they could help implement on the Ticbase grant before it ends.\n\n\nbrobison@uidaho.edu"
  },
  {
    "objectID": "posts/AIVideo/index.html",
    "href": "posts/AIVideo/index.html",
    "title": "My First AI Generated Video",
    "section": "",
    "text": "Cool?\nI made this video with Kaiber. I uploaded this image as the starting point:\n\nI made the image using MidJourney v5.1\nI upoaded this song for the soundtrack:\nAudio\nwhich I made using the AI Music Generator Mubert.\nThen I used this prompt to make the video:\nA secret underground bioweapons laboratory, in the style of photo taken on film, film grain, vintage, 8k ultrafine detail, private press…\nVideo"
  },
  {
    "objectID": "posts/TwinStickGraphs1/index.html",
    "href": "posts/TwinStickGraphs1/index.html",
    "title": "Embedding Data Literacy Content in Project TwinStick",
    "section": "",
    "text": "Is it really an Evolutionary game?\nWhen we are developing our games, we perform extensive testing to make sure the underlying biological models are performing as expected. In the case of evolutionary games, we need to test that the population of enemies is indeed adapting the game conditions as we intended. This post is (I hope) the first in a series in which we document those tests.\nMy hope is that performing these tests in this format will serve as an organized archive of our analyses, improving reproducibility and rigor. I also have a vain glimmer of hope that some person other than me might actually be interested in this topic."
  },
  {
    "objectID": "posts/TwinStickGraphs1/index.html#project-twin-stick",
    "href": "posts/TwinStickGraphs1/index.html#project-twin-stick",
    "title": "Embedding Data Literacy Content in Project TwinStick",
    "section": "PROJECT TWIN STICK",
    "text": "PROJECT TWIN STICK\nThis is intended to be an evolutionary shooter. The game is described in detail here."
  },
  {
    "objectID": "posts/TwinStickGraphs1/index.html#data",
    "href": "posts/TwinStickGraphs1/index.html#data",
    "title": "Embedding Data Literacy Content in Project TwinStick",
    "section": "DATA",
    "text": "DATA\nIn this section, we ingest the data from whatever runs are relevant to the analysis. The data are written from the project in .csv files. The following code reads all .csv files from the working directory. It creates new variables for the source file name (file) and the number of offspring produced by each individual (offspring_count). It then appends all the data files into a single data frame called allfiles. I also create a few aggregations of the data by generating mean values of interest (traits, genes, fitness estimates) for each generation in each file (TraitAvg, GeneAvg, FitAvg)\n\n\nCode\nlibrary(tidyverse)\nlibrary(pheatmap)\n\n\nfiles &lt;- list.files(pattern = \"*.csv\", full.names = TRUE)\n\nallfiles = data.frame()\nfor(csv in files){\n  Twin3 &lt;- read.csv(csv, as.is=T, header=T)\n  Twin3['file'] = csv\n\n\nTwin3&lt;-Twin3%&gt;%\n  mutate(Unique.Slime.ID = paste(Wave.Number, \".\", Slime.ID))%&gt;%\n  mutate(Unique.Parent.One = paste(Wave.Number-1, \".\", Parent.One))%&gt;%\n  mutate(Unique.Parent.Two = paste(Wave.Number-1, \".\", Parent.Two))\n\n\ndf_parents &lt;- Twin3 %&gt;%\n  select(Unique.Parent.One, Unique.Parent.Two) %&gt;%\n  pivot_longer(cols = everything(), names_to = \"parent_type\", values_to = \"parent_id\")\n\n# Count the number of offspring for each parent\noffspring_counts &lt;- df_parents %&gt;%\n  group_by(parent_id) %&gt;%\n  summarise(offspring_count = n(), .groups = \"drop\")\n\noffspring_counts &lt;- offspring_counts%&gt;%\n  filter(parent_id != \"-1 . N/A\")\n\n\noffspring_counts&lt;- rename(offspring_counts, Unique.Slime.ID = parent_id)\n\n\n\nTwin3 &lt;- Twin3 %&gt;%\n  left_join(offspring_counts, by = \"Unique.Slime.ID\")%&gt;%\n  replace_na(list(offspring_count = 0))\n\nallfiles&lt;-rbind(allfiles,Twin3)\n\n}\n\n\n\nTraits &lt;- c(\"Main.Resistance.Trait\", \"Secondary.Resistance.Trait\", \"Speed.Trait\",\n           \"Tower.Attraction.Trait\", \"Slime.Optimal.Distance.Trait\", \"Turn.Rate.Trait\", \n           \"Slime.View.Range.Trait\", \"Tower.View.Range.Trait\")\n\nGenes &lt;- c(\"Main.Resistance.Gene\", \"Secondary.Resistance.Gene\", \"Speed.Gene\",\n           \"Tower.Attraction.Gene\", \"Slime.Optimal.Distance.Gene\", \"Turn.Rate.Gene\", \n           \"Slime.View.Range.Gene\", \"Tower.View.Range.Gene\")\n\nallfiles&lt;-allfiles%&gt;%\n  mutate(Generation=as.factor(Wave.Number))%&gt;%\n  mutate(offspring.count.Fitness = offspring_count)%&gt;%\n  mutate(reproduce = if_else(offspring_count == 0, \"N\", \"Y\"))\n   \n\nTraitAvg &lt;- allfiles %&gt;%\n  group_by(file, Generation) %&gt;%\n  summarize(across(ends_with(\"Trait\"), mean,  na.rm = TRUE))\n\nGeneAvg &lt;- allfiles %&gt;%\n  group_by(file, Generation) %&gt;%\n  summarize(across(ends_with(\"Gene\"), list(mean = mean, var = var), na.rm = TRUE, .names = \"{.fn}.{.col}\"))\n\nFitAvg &lt;- allfiles %&gt;%\n  group_by(file, Generation) %&gt;%\n  summarize(across(ends_with(\"Fitness\"), list(mean = mean, var = var), na.rm = TRUE, .names = \"{.fn}.{.col}\"))\n\n\nallfiles &lt;- allfiles %&gt;%\n  mutate(LResist.Trait = case_when(\n    Main.Type == \"Lightning\" & Secondary.Type == \"Lightning\" ~ 1.0,\n    Main.Type == \"Lightning\" & Secondary.Type != \"Lightning\" ~ 0.6,\n    Main.Type != \"Lightning\" & Secondary.Type == \"Lightning\" ~ 0.4,\n    TRUE ~ 0\n  ))\n\n\nThe allfiles dataframe contains the following variables (I also show a few columns of the example data):\n\n\nCode\ndata.dictionary &lt;- t(as.data.frame(head(allfiles)))\nknitr::kable(data.dictionary)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n\nSlime.ID\n0\n1\n2\n3\n4\n5\n\n\nWave.Number\n0\n0\n0\n0\n0\n0\n\n\nPath.Distance.To.Player\n11.11780\n51.38884\n54.21675\n53.52212\n53.59597\n45.62690\n\n\nPlayer.Distance.Fitness\n4126.1610\n954.4017\n905.5223\n917.0590\n915.8185\n1072.3420\n\n\nParent.One\nN/A\nN/A\nN/A\nN/A\nN/A\nN/A\n\n\nParent.Two\nN/A\nN/A\nN/A\nN/A\nN/A\nN/A\n\n\nMain.Type\nFire\nPlayer\nFire\nPlayer\nLightning\nIce\n\n\nSecondary.Type\nLightning\nBalanced\nLightning\nBalanced\nLaser\nLightning\n\n\nMain.Resistance.Gene\n2.0608870\n-4.4758530\n-4.4736510\n-0.2062796\n0.7103590\n-1.3259160\n\n\nMain.Resistance.Trait\n0.5781593\n0.2109908\n0.2110825\n0.4374371\n0.4943977\n0.3701721\n\n\nSecondary.Resistance.Gene\n0.01938968\n0.62744310\n0.69598620\n0.89974080\n-2.50028000\n5.43153300\n\n\nSecondary.Resistance.Trait\n0.1831496\n0.2069943\n0.2098212\n0.2183915\n0.1066839\n0.4645305\n\n\nSlime.View.Range.Gene\n1.45217100\n1.50213300\n1.37864100\n0.08060846\n-1.77270500\n-2.11503800\n\n\nSlime.View.Range.Trait\n9.846652\n9.891931\n9.779832\n8.575567\n6.864766\n6.562094\n\n\nTower.View.Range.Gene\n0.7422258\n-2.2926750\n0.5915011\n-1.4378940\n1.7216920\n-0.2360138\n\n\nTower.View.Range.Trait\n22.85026\n15.42024\n22.47606\n17.44348\n25.23899\n20.41014\n\n\nPlayer.View.Range.Gene\n-0.7063282\n-1.7676410\n-1.2759830\n-2.7530170\n1.3304860\n-2.3889850\n\n\nPlayer.View.Range.Trait\n3.356673\n2.912497\n3.109854\n2.560056\n4.390841\n2.683669\n\n\nWall.View.Range.Gene\n0.1313843\n-0.1305148\n0.0166637\n-2.3788810\n2.7195210\n-1.0645380\n\n\nWall.View.Range.Trait\n5.131722\n4.938622\n5.046419\n3.530812\n7.309699\n4.298796\n\n\nSheep.View.Range.Gene\n1.7711210\n1.5496080\n2.7501400\n-2.0088600\n0.1356484\n-1.8824000\n\n\nSheep.View.Range.Trait\n6.462865\n6.272002\n7.337697\n3.731431\n5.134914\n3.802772\n\n\nSlime.Attraction.Gene\n-0.9736148\n-0.2611402\n1.1806460\n-2.3092990\n2.6089730\n-2.2889140\n\n\nSlime.Attraction.Trait\n0.4394477\n0.4836845\n0.5732593\n0.3595484\n0.6575158\n0.3607228\n\n\nTower.Attraction.Gene\n-0.4425031\n0.1107965\n-6.3629560\n2.1391270\n1.3166820\n3.1351720\n\n\nTower.Attraction.Trait\n-0.29616710\n-0.23185630\n-0.77999960\n0.01738906\n-0.08520758\n0.14095180\n\n\nPlayer.Attraction.Gene\n-0.682144100\n-0.007417813\n3.359316000\n-1.138752000\n-3.313859000\n2.257708000\n\n\nPlayer.Attraction.Trait\n0.01473093\n0.09874988\n0.47763400\n-0.04231870\n-0.30428250\n0.36462820\n\n\nWall.Attraction.Gene\n0.11956880\n-0.57143210\n-0.49371080\n-0.95780370\n2.63732400\n0.07642503\n\n\nWall.Attraction.Trait\n-0.8776227\n-0.8949995\n-0.8931594\n-0.9037367\n-0.7926000\n-0.8787764\n\n\nSheep.Attraction.Gene\n0.8572116\n-1.4152040\n-3.5675310\n1.0647060\n4.1666570\n1.2193660\n\n\nSheep.Attraction.Trait\n0.7710594\n0.6561534\n0.5270030\n0.7800875\n0.8851026\n0.7866486\n\n\nSlime.Optimal.Distance.Gene\n0.2664202\n-1.7590030\n-3.1496450\n0.4679058\n-0.4069065\n0.4513546\n\n\nSlime.Optimal.Distance.Trait\n0.27595890\n0.03011549\n-0.14272460\n0.29906120\n0.19654550\n0.29717610\n\n\nSpeed.Gene\n2.670809\n1.419246\n2.097860\n-1.671494\n-1.217723\n-1.739751\n\n\nSpeed.Trait\n3.594294\n3.057428\n3.342277\n1.973656\n2.109971\n1.953825\n\n\nTurn.Rate.Gene\n-2.0039470\n0.9699734\n0.2064506\n-4.7445310\n-0.2931280\n0.6523061\n\n\nTurn.Rate.Trait\n0.1190994\n0.2214034\n0.1902499\n0.0637966\n0.1717490\n0.2080165\n\n\nSprint.Duration.Gene\n0.3580502\n-3.5267780\n-2.8798950\n-1.8273190\n1.3285910\n5.9572890\n\n\nSprint.Duration.Trait\n2.611816\n1.464134\n1.636994\n1.938691\n2.911409\n4.079883\n\n\nSprint.Cooldown.Gene\n0.1790418\n4.8556380\n1.3212770\n-2.8306380\n-3.1959230\n2.3105360\n\n\nSprint.Cooldown.Trait\n2.7232060\n4.9613790\n3.9469710\n0.2784542\n0.1965971\n4.5487290\n\n\nX\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nfile\n./geneWriteFile08_11_2023_01-36-07.csv\n./geneWriteFile08_11_2023_01-36-07.csv\n./geneWriteFile08_11_2023_01-36-07.csv\n./geneWriteFile08_11_2023_01-36-07.csv\n./geneWriteFile08_11_2023_01-36-07.csv\n./geneWriteFile08_11_2023_01-36-07.csv\n\n\nUnique.Slime.ID\n0 . 0\n0 . 1\n0 . 2\n0 . 3\n0 . 4\n0 . 5\n\n\nUnique.Parent.One\n-1 . N/A\n-1 . N/A\n-1 . N/A\n-1 . N/A\n-1 . N/A\n-1 . N/A\n\n\nUnique.Parent.Two\n-1 . N/A\n-1 . N/A\n-1 . N/A\n-1 . N/A\n-1 . N/A\n-1 . N/A\n\n\noffspring_count\n0\n0\n0\n0\n0\n0\n\n\nGeneration\n0\n0\n0\n0\n0\n0\n\n\noffspring.count.Fitness\n0\n0\n0\n0\n0\n0\n\n\nreproduce\nN\nN\nN\nN\nN\nN\n\n\nLResist.Trait\n0.4\n0.0\n0.4\n0.0\n0.6\n0.4\n\n\n\n\n\nVariables that end in .Gene are the values of the genome for that particular locus. Variables that end in .Trait are the values of the trait for that particular locus. Variables that end in .Fitness are the values of that particular Fitness component."
  },
  {
    "objectID": "posts/TwinStickGraphs1/index.html#experimental-conditions",
    "href": "posts/TwinStickGraphs1/index.html#experimental-conditions",
    "title": "Embedding Data Literacy Content in Project TwinStick",
    "section": "EXPERIMENTAL CONDITIONS",
    "text": "EXPERIMENTAL CONDITIONS\nIn this situation, I’m interested in what types of Data Literacy exercises I can incorporate between generations of the game, especially in the first few generations. We often show players time series graphs of trait values over time, but these don’t tend to make much sense until 5 to 10 generations have occurred.\nHere, I’m going to explore some visualizations that summarize what happened in the generation that the player most recently completed."
  },
  {
    "objectID": "posts/TwinStickGraphs1/index.html#results",
    "href": "posts/TwinStickGraphs1/index.html#results",
    "title": "Embedding Data Literacy Content in Project TwinStick",
    "section": "RESULTS",
    "text": "RESULTS\n\nSlime Types\nEach Slime has a Main.Type and a Secondary.Type. These types use the ~.Resistance.~ category to confer resistance to the appropriate damage type.\nThe following code creates two summary dataframes with the suffix ~Typecounts that count the number of slimes of each ~.Type in each generation for each replicate. It then creates the graphs of ~Type frequency over time.\n\n\nCode\nMainTypecounts &lt;- allfiles %&gt;%\n  group_by(Main.Type, Generation, file) %&gt;%\n  summarise(Main.count = n(), .groups = \"drop\")\n\nSecondaryTypecounts &lt;- allfiles %&gt;%\n  group_by(Secondary.Type, Generation, file) %&gt;%\n  summarise(Secondary.count = n(), .groups = \"drop\")\n\n            \n\nggplot(MainTypecounts, aes(x = Generation, y = Main.count, fill = as.factor(Main.Type))) +\n  geom_col(position = \"stack\") +\n  labs(x = \"Generation\", y = \"Count\", fill = \"Main Slime Type\") +\n  theme_minimal()+\n  facet_wrap(~file, ncol=2)\n\n\n\n\n\nCode\nggplot(SecondaryTypecounts, aes(x = Generation, y = Secondary.count, fill = as.factor(Secondary.Type))) +\n  geom_col(position = \"stack\") +\n  labs(x = \"Generation\", y = \"Count\", fill = \"Secondary Slime Type\") +\n  theme_minimal()+\n  facet_wrap(~file, ncol=2)"
  },
  {
    "objectID": "posts/TwinStickGraphs1/index.html#slime-fitness",
    "href": "posts/TwinStickGraphs1/index.html#slime-fitness",
    "title": "Embedding Data Literacy Content in Project TwinStick",
    "section": "Slime Fitness",
    "text": "Slime Fitness\nIn most cases, it is useful to summarize the behavior of the fitness function for each experiment. In this case, the fitness function calculates a value of 50,000/(distance to player +1). I will also reverse calculate that for visualization, showing the actual distance to the player (Path.Distance.To.Player). We then use Roulette Wheel selection to determine the parents of the next generation.\n\n\nCode\nggplot(allfiles, aes(x=Wave.Number, y= Path.Distance.To.Player))+\n  geom_jitter(aes(x=Wave.Number, y= Path.Distance.To.Player, color = offspring_count, alpha = offspring_count))+\n  geom_smooth()+\n  facet_wrap(~file, ncol = 2)+\n  scale_color_continuous(low=\"blue\", high = \"red\")+\n  ylim(0, 80)\n\n\n`geom_smooth()` using method = 'gam' and formula = 'y ~ s(x, bs = \"cs\")'\n\n\nWarning: Computation failed in `stat_smooth()`\nCaused by error in `smooth.construct.cr.smooth.spec()`:\n! x has insufficient unique values to support 10 knots: reduce k.\n\n\nWarning: Removed 236 rows containing missing values (`geom_point()`).\n\n\n\n\n\nCode\ndf_sorted &lt;- allfiles %&gt;%\n    filter(Generation == 2) %&gt;%\n    arrange(offspring_count) %&gt;%\n    mutate(Unique.Slime.ID = factor(Unique.Slime.ID, levels = Unique.Slime.ID),\n           cumulative_offspring = cumsum(offspring_count),\n           # Create discrete bins for cumulative_offspring with labels\n           cumulative_bins = cut(cumulative_offspring, \n                                 breaks = quantile(cumulative_offspring, \n                                                  probs = c(0.5,0.9, 0.95, 1)),\n                                 labels = c(\"Low\", \"Medium\", \"High\")))\n\n\nggplot(df_sorted, aes(x = Unique.Slime.ID, y = offspring_count)) +\n    geom_col(aes(fill = cumulative_bins)) +\n  geom_line(aes(x=Unique.Slime.ID, y = cumulative_offspring, group = 1))+\n    labs(title = \"Column Plot of Offspring Count\",\n         x = \"Slime ID\",\n         y = \"Number of Offspring\") +\n    theme_minimal() +\n    facet_wrap(~file) +\n    scale_fill_brewer(palette = \"Set1\")\n\n\n\n\n\nCode\nggplot(df_sorted, aes(x = Unique.Slime.ID, y = cumulative_offspring)) +\n    geom_col(aes(fill = cumulative_bins)) +\n    labs(title = \"Column Plot of Offspring Count\",\n         x = \"Slime ID\",\n         y = \"Number of Offspring\") +\n    theme_minimal() +\n    facet_wrap(~file) +\n    scale_fill_brewer(palette = \"Set1\")\n\n\n\n\n\nthese plots might be useful as a starting point. The ideas would be to show the player that not all slimes have the same number of babies. Then we would challenge them as to why that is happening.\nThe next step would be to show them that the number of babies is related to the fitness function of the game. In this case that is how close they get to the player.\n\n\nCode\nggplot(df_sorted, aes(x = Unique.Slime.ID, y = Path.Distance.To.Player)) +\n    geom_col(aes(fill = offspring_count)) +\n    labs(title = \"Column Plot of Path Distance to Player\",\n         x = \"Slime ID\",\n         y = \"Path Distance to Player\") +\n    theme_minimal() +\n    facet_wrap(~file) \n\n\n\n\n\nCode\nggplot(df_sorted, aes(x = Path.Distance.To.Player)) +\n  geom_histogram(binwidth = 1, fill = \"blue\", color = \"black\", alpha = 0.7) +\n  labs(title = \"Histogram of Path Distance to Player\",\n       x = \"Path Distance to Player\",\n       y = \"Count\") +\n  theme_minimal()\n\n\n\n\n\nCode\nggplot(df_sorted, aes(x=Path.Distance.To.Player, y= offspring_count))+\n  geom_point(aes(color = cumulative_offspring))+\n  scale_colour_gradient(low = \"blue\", high = \"red\")\n\n\n\n\n\nCode\nggplot(df_sorted, aes(x=Player.Distance.Fitness, y= offspring_count))+\n  geom_point(aes(color = cumulative_offspring))+\n  scale_colour_gradient(low = \"blue\", high = \"red\")\n\n\n\n\n\nSo the closer they get to the player, the more babies they have.\nNext, we have to figure out what traits might explain how they are getting so close!\n\n\nCode\nslime_palette &lt;- c(\"green\", \"grey\", \"darkred\", \"red\", \"blue\", \"purple\", \"lightgreen\",\"black\")\n\n# Assuming df_sorted is your data frame\nggplot(df_sorted, aes(x = Main.Type, y = offspring_count)) +\n  geom_jitter(aes(color = Main.Type), width = 0.3, height = 0) +\n  facet_wrap(~file) +\n  scale_color_manual(values = slime_palette) +\n  theme_minimal()\n\n\n\n\n\nCode\nggplot(df_sorted, aes(x = Secondary.Type, y = offspring_count)) +\n  geom_jitter(aes(color = Secondary.Type), width = 0.3, height = 0) +\n  facet_wrap(~file) +\n  scale_color_manual(values = slime_palette) +\n  theme_minimal()\n\n\n\n\n\nThis would be for slime type. What about the traits?"
  },
  {
    "objectID": "posts/TwinStickGraphs1/index.html#evolutionary-responses",
    "href": "posts/TwinStickGraphs1/index.html#evolutionary-responses",
    "title": "Embedding Data Literacy Content in Project TwinStick",
    "section": "Evolutionary Responses",
    "text": "Evolutionary Responses\nTo estimate what traits might be under selection, we can calculate selection gradients for each trait. This is essentially the slope of the line between offspring_count and the Trait.\nFor each Trait, we should also try to understand its individual evolutionary trajectory. Is the population mean for the trait increasing or decreasing?\nSince the first thing we are interested in is Damage Resistance conferred by Type, we’ll calculate Lightning resistance directly.\n\n\nCode\nallfiles &lt;- allfiles %&gt;%\n  mutate(LResist.Trait = case_when(\n    Main.Type == \"Lightning\" & Secondary.Type == \"Lightning\" ~ 1.0,\n    Main.Type == \"Lightning\" & Secondary.Type != \"Lightning\" ~ 0.6,\n    Main.Type != \"Lightning\" & Secondary.Type == \"Lightning\" ~ 0.4,\n    TRUE ~ 0\n  ))\n\ntraittemp &lt;- allfiles %&gt;%\n  select(Generation, offspring_count, file, LResist.Trait) %&gt;%\n  group_by(Generation, file) %&gt;%\n  mutate(scaleST0 = as.vector(scale(LResist.Trait, center = TRUE))) %&gt;%\n  mutate(scaleST02 = scaleST0 * scaleST0) %&gt;%\n  mutate(Generation = as.numeric(as.character(Generation)))\n\n\n\n\nGradients &lt;- traittemp %&gt;%\n  group_by(Generation, file) %&gt;%\n  do({\n    model &lt;- lm(offspring_count ~ scaleST0 + scaleST02, data = .)\n    data.frame(\n      Beta = coefficients(model)[2],\n      PB = summary(model)$coef[2, 4],\n      Trait = \"LResist.Trait\"\n    )\n  })\n\nGradients &lt;- Gradients %&gt;%\n  mutate(sig = if_else(PB &lt; 0.05 , \"Y\", \"N\"))\n\nTraitAvg &lt;- allfiles %&gt;%\n  group_by(file, Generation) %&gt;%\n  summarize(across(ends_with(\"Trait\"), mean,  na.rm = TRUE))\n\n\n`summarise()` has grouped output by 'file'. You can override using the\n`.groups` argument.\n\n\nCode\ndf_Gen &lt;- allfiles %&gt;%\n  filter(Generation == 2)\n  \n  \n\nggplot(data = df_Gen, aes(x=LResist.Trait, y = offspring_count))+\n  geom_jitter()\n\n\n\n\n\nCode\nggplot(data = TraitAvg, aes(x = as.numeric(Generation), y = LResist.Trait))+\n    geom_smooth(data = TraitAvg, aes(x = as.numeric(Generation), y = LResist.Trait), method = \"loess\") +\n    theme(legend.position = \"none\") +\n    facet_wrap(~file, ncol = 2) \n\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\nCode\nggplot(Gradients, aes(x=Generation, y = Beta))+\n  geom_point(aes(color = sig))+\n  geom_smooth(fill=\"blue\")+\n  scale_color_manual(values = c(\"grey\",\"red\"))+\n  geom_hline(yintercept=0, linetype=\"dashed\", color = \"black\")+\n  theme(legend.position = \"none\",\n        panel.background = element_blank())\n\n\n`geom_smooth()` using method = 'loess' and formula = 'y ~ x'\n\n\n\n\n\nNow we’ll perform a similar analysis for the remaining traits.\n\n\nCode\nGradientslong &lt;- data.frame()\nfor(i in seq_along(Traits)){\n\ntraittemp&lt;-allfiles%&gt;%\n  select(Generation, offspring_count, file, !!sym(Traits[i]))%&gt;%\n  group_by(Generation, file)%&gt;%\n  mutate(scaleST0 = as.vector(scale(!!sym(Traits[i]), center = TRUE)))%&gt;%\n  mutate(scaleST02 = scaleST0*scaleST0)%&gt;%\n  mutate(Generation = as.numeric(as.character(Generation)))\n\nGradients &lt;- traittemp %&gt;%\n  group_by(Generation, file) %&gt;%\n  do({\n    model &lt;- lm(offspring_count ~ scaleST0 + scaleST02, data = .)\n    data.frame(\n      Beta = coefficients(model)[2],\n      PB = summary(model)$coef[2, 4],\n      Trait = Traits[i]\n    )\n  })\n\nGradients &lt;- Gradients %&gt;%\n  mutate(sig = if_else(PB &lt; 0.05 , \"Y\", \"N\"))\n\nGradientslong &lt;- rbind(Gradientslong, Gradients)\n\nG &lt;- ggplot(data = GeneAvg, aes(x = as.numeric(Generation), y = !!sym(Genes[i])))+\n    geom_point(data = allfiles, aes(x = as.numeric(Generation), y = !!sym(Genes[i])), size=0.1, alpha = 0.02)+\n    geom_smooth(data = GeneAvg, aes(x = as.numeric(Generation), y = !!sym(paste(\"mean.\",Genes[i], sep = \"\")), method = \"loess\")) +\n    theme(legend.position = \"none\") +\n    facet_wrap(~file, ncol = 2) \n\nP &lt;- ggplot(data = TraitAvg, aes(x = as.numeric(Generation), y = !!sym(Traits[i])))+\n    geom_smooth(data = TraitAvg, aes(x = as.numeric(Generation), y = !!sym(Traits[i])), method = \"loess\") +\n    geom_point(data=allfiles, aes(x = as.numeric(Generation), y = !!sym(Traits[i]), color = offspring_count), size = 0.5, alpha =0.1)+\n    theme(legend.position = \"none\") +\n    facet_wrap(~file, ncol = 2) \n\n\n\nS &lt;- ggplot(Gradients, aes(x=Generation, y = Beta))+\n  geom_point(aes(color = sig))+\n  geom_smooth(fill=\"blue\")+\n  scale_color_manual(values = c(\"grey\",\"red\"))+\n  geom_hline(yintercept=0, linetype=\"dashed\", color = \"black\")+\n  theme(legend.position = \"none\",\n        panel.background = element_blank())\n\nprint(G)\n\nprint(P)\n\nprint(S)\n\n}\n\n\nWarning in geom_smooth(data = GeneAvg, aes(x = as.numeric(Generation), y =\n!!sym(paste(\"mean.\", : Ignoring unknown aesthetics: method\n\n\n`geom_smooth()` using method = 'loess' and formula = 'y ~ x'\n\n\n\n\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n`geom_smooth()` using method = 'loess' and formula = 'y ~ x'\n\n\nWarning in geom_smooth(data = GeneAvg, aes(x = as.numeric(Generation), y =\n!!sym(paste(\"mean.\", : Ignoring unknown aesthetics: method\n\n\n\n\n\n`geom_smooth()` using method = 'loess' and formula = 'y ~ x'\n\n\n\n\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n`geom_smooth()` using method = 'loess' and formula = 'y ~ x'\n\n\nWarning in geom_smooth(data = GeneAvg, aes(x = as.numeric(Generation), y =\n!!sym(paste(\"mean.\", : Ignoring unknown aesthetics: method\n\n\n\n\n\n`geom_smooth()` using method = 'loess' and formula = 'y ~ x'\n\n\n\n\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n`geom_smooth()` using method = 'loess' and formula = 'y ~ x'\n\n\nWarning in geom_smooth(data = GeneAvg, aes(x = as.numeric(Generation), y =\n!!sym(paste(\"mean.\", : Ignoring unknown aesthetics: method\n\n\n\n\n\n`geom_smooth()` using method = 'loess' and formula = 'y ~ x'\n\n\n\n\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n`geom_smooth()` using method = 'loess' and formula = 'y ~ x'\n\n\nWarning in geom_smooth(data = GeneAvg, aes(x = as.numeric(Generation), y =\n!!sym(paste(\"mean.\", : Ignoring unknown aesthetics: method\n\n\n\n\n\n`geom_smooth()` using method = 'loess' and formula = 'y ~ x'\n\n\n\n\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n`geom_smooth()` using method = 'loess' and formula = 'y ~ x'\n\n\nWarning in geom_smooth(data = GeneAvg, aes(x = as.numeric(Generation), y =\n!!sym(paste(\"mean.\", : Ignoring unknown aesthetics: method\n\n\n\n\n\n`geom_smooth()` using method = 'loess' and formula = 'y ~ x'\n\n\n\n\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n`geom_smooth()` using method = 'loess' and formula = 'y ~ x'\n\n\nWarning in geom_smooth(data = GeneAvg, aes(x = as.numeric(Generation), y =\n!!sym(paste(\"mean.\", : Ignoring unknown aesthetics: method\n\n\n\n\n\n`geom_smooth()` using method = 'loess' and formula = 'y ~ x'\n\n\n\n\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n`geom_smooth()` using method = 'loess' and formula = 'y ~ x'\n\n\nWarning in geom_smooth(data = GeneAvg, aes(x = as.numeric(Generation), y =\n!!sym(paste(\"mean.\", : Ignoring unknown aesthetics: method\n\n\n\n\n\n`geom_smooth()` using method = 'loess' and formula = 'y ~ x'\n\n\n\n\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n`geom_smooth()` using method = 'loess' and formula = 'y ~ x'"
  },
  {
    "objectID": "posts/TwinStickGraphs1/index.html#heatmap",
    "href": "posts/TwinStickGraphs1/index.html#heatmap",
    "title": "Embedding Data Literacy Content in Project TwinStick",
    "section": "Heatmap",
    "text": "Heatmap\n\n\nCode\nGradMatrix &lt;- Gradientslong %&gt;%\n  select(Generation, Trait, Beta)%&gt;%\n  pivot_wider(names_from = Trait, values_from = Beta)\n\n\nAdding missing grouping variables: `file`\n\n\nCode\npaletteLength &lt;- 50\nmyColor &lt;- colorRampPalette(c(\"blue\", \"white\", \"#ED2024\"))(paletteLength)\n# length(breaks) == length(paletteLength) + 1\n# use floor and ceiling to deal with even/odd length pallettelengths\n\n\nHeatmap &lt;- GradMatrix %&gt;%\n  ungroup()%&gt;%\n  select(Main.Resistance.Trait, Secondary.Resistance.Trait, Slime.View.Range.Trait, \n         Tower.View.Range.Trait, \n         Tower.Attraction.Trait, Slime.Optimal.Distance.Trait, \n         Speed.Trait, Turn.Rate.Trait)\n\n\n\n\n\n\n\nHeatmatrix2 &lt;- as.matrix(Heatmap)\n\nmyBreaks2 &lt;- c(seq(min(Heatmatrix2), 0, length.out=ceiling(paletteLength/2) + 1), seq(max(Heatmatrix2)/paletteLength, max(Heatmatrix2), \n                                                                                      length.out=floor(paletteLength/2)))\n\n\nheatmap2 = pheatmap(Heatmatrix2,\n         cluster_rows = FALSE, # don't cluster rows\n         cluster_cols = TRUE, # don't cluster columns\n         clustering_distance_cols = \"euclidean\",\n         clustering_distance_rows = \"euclidean\",\n         clustering_method = \"complete\",\n         color = myColor,\n         breaks = myBreaks2)"
  },
  {
    "objectID": "posts/TwinStickGraphs1/index.html#single-generation-plots",
    "href": "posts/TwinStickGraphs1/index.html#single-generation-plots",
    "title": "Embedding Data Literacy Content in Project TwinStick",
    "section": "SINGLE GENERATION PLOTS",
    "text": "SINGLE GENERATION PLOTS\n\n\nCode\nsinglegen &lt;- allfiles %&gt;%\n  filter(Generation == 5)\n\nsinglegrad &lt;- Gradientslong %&gt;%\n  filter(Generation == 3)\n\n\nggplot(singlegen, aes(x=Speed.Trait) )+\n  geom_histogram()+\n  facet_grid(reproduce~file)\n\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\nCode\nggplot(singlegen, aes(x=Turn.Rate.Trait) )+\n  geom_histogram()+\n  facet_grid(reproduce~file)\n\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\nCode\nggplot(singlegen, aes(x=Turn.Rate.Trait, y = Speed.Trait, color = reproduce))+\n  geom_point()+\n  facet_wrap(~file)"
  },
  {
    "objectID": "posts/TwinStickGraphs1/index.html#generation-0",
    "href": "posts/TwinStickGraphs1/index.html#generation-0",
    "title": "Embedding Data Literacy Content in Project TwinStick",
    "section": "GENERATION 0",
    "text": "GENERATION 0\nYou’ve defeated the first generation of slimes! Our sensors indicate that the slimes have different types, that we’ve named Fire, Player, Lightning, Ice, Laser, Acid, Balanced, Blaster.\nHere is a graph showing the frequencies of the slime types in the wave you just defeated.\n\n\nCode\nslime_palette &lt;- c(\"green\", \"grey\", \"darkred\", \"red\", \"blue\", \"purple\", \"lightgreen\",\"black\")\n\nggplot(MainTypecounts%&gt;%\n         filter(Generation==0), aes(x=Main.Type, y = Main.count, fill = Main.Type))+\n  geom_col()+\n  scale_fill_manual(values = slime_palette) +\n  theme_minimal()\n\n\n\n\n\n\n\nFrequency of slime type (Main.Type) in the previous wave.\n\n\n\n\n\n\nLet’s test your data skills! Based on this graph, what was the most common slime type in the most recent wave?\nGreat job! I wonder if these slime types have any special characteristics that would affect your strategy?"
  },
  {
    "objectID": "posts/TwinStickGraphs1/index.html#generation-1",
    "href": "posts/TwinStickGraphs1/index.html#generation-1",
    "title": "Embedding Data Literacy Content in Project TwinStick",
    "section": "GENERATION 1",
    "text": "GENERATION 1\nWell done again! You’ve survived another wave of slime attacks. We are collecting more data on these mysterious creatures.\nIt looks like each wave of slimes is actually the offspring of the previous wave! Our sensors are able to detect the number of offspring that each slime you just defeated will have. Check this out! Here is graph that summarizes the distribution of the number of offspring.\n\n\nCode\nggplot(allfiles%&gt;%\n         filter(Generation == 1),\n       aes(x = offspring_count)) +\n  geom_histogram(binwidth = 1, fill = \"blue\", color = \"black\", alpha = 0.7) +\n  labs(title = \"Histogram of Offspring Count\",\n       x = \"Number of Offspring\",\n       y = \"Count\") +\n  theme_minimal()+ \n  scale_y_continuous(breaks = seq(0, 150, by = 10),   \n                     minor_breaks = seq(0, 150, by = 1))+\n  scale_x_continuous(breaks = seq(0, 100, by = 10),   \n                     minor_breaks = seq(0, 100, by = 1))\n\n\n\n\n\nCode\nBest &lt;- allfiles%&gt;%\n  filter(Generation==1)\n\n\nHow many slimes do you think will contribute NO offspring to the next wave?\nSomething to think about: There are a couple slimes that had LOTS of offspring, and one that even had 85 offspring! What made them so special? Why were they able to have so many offspring?"
  },
  {
    "objectID": "posts/TwinStickGraphs1/index.html#generation-2",
    "href": "posts/TwinStickGraphs1/index.html#generation-2",
    "title": "Embedding Data Literacy Content in Project TwinStick",
    "section": "GENERATION 2",
    "text": "GENERATION 2\nThat was close! Let’s analyze what is going on! We think we’ve figured out what can explain the difference in the number of offspring! It looks like the slime that get closest to the player tend to have the most babies! Check this out!\n\n\nCode\nggplot(allfiles%&gt;%\n         filter(Generation ==2),\n       aes(x=Path.Distance.To.Player, y=offspring_count))+\n  geom_point(aes(color=Main.Type))+\n  labs(title = \"Number of Offspring is related to Player Distance\",\n       x = \"Closest distance from player\",\n       y = \"Number of Offspring\") +\n  theme_minimal()+ \n  scale_y_continuous(breaks = seq(0, 100, by = 10),   \n                     minor_breaks = seq(0, 100, by = 1))+\n  scale_x_continuous(breaks = seq(0, 100, by = 10),   \n                     minor_breaks = seq(0, 100, by = 1))+\n  scale_color_manual(values = slime_palette)\n\n\n\n\n\nNote that these graphs are interactive! You can get all sorts of information from them by hovering or clicking on them! Try to use that approach to figure out the Slime Type of the slime that had the MOST offspring! Was it the same slime that got closest to the player?"
  },
  {
    "objectID": "posts/TwinStickGraphs1/index.html#generation-3",
    "href": "posts/TwinStickGraphs1/index.html#generation-3",
    "title": "Embedding Data Literacy Content in Project TwinStick",
    "section": "GENERATION 3",
    "text": "GENERATION 3\nHow are those pesky slimes getting close to you? Let’s look at some of the traits that might explain how they are getting through your defenses.\n\n\nCode\nMainTypecounts &lt;- allfiles %&gt;%\n  group_by(Main.Type, Generation, Wave.Number, file) %&gt;%\n  summarise(Main.count = n(), .groups = \"drop\")\n\nSecondaryTypecounts &lt;- allfiles %&gt;%\n  group_by(Secondary.Type, Generation, Wave.Number, file) %&gt;%\n  summarise(Secondary.count = n(), .groups = \"drop\")\n\n            \n\nggplot(MainTypecounts%&gt;%\n         filter(Wave.Number&lt;4), aes(x = Generation, y = Main.count, fill = as.factor(Main.Type))) +\n  geom_col(position = \"stack\") +\n  labs(x = \"Generation\", y = \"Count\", fill = \"Main Slime Type\") +\n  theme_minimal()+\n  facet_wrap(~file, ncol=2)+\n  scale_fill_manual(values = slime_palette)\n\n\n\n\n\nCode\nggplot(MainTypecounts%&gt;%\n         filter(Wave.Number&lt;4), aes(x = Generation, y = Main.count, color = as.factor(Main.Type))) +\n  geom_line(aes(group=Main.Type)) +\n  labs(x = \"Generation\", y = \"Count\", fill = \"Main Slime Type\") +\n  theme_minimal()+\n  facet_wrap(~file, ncol=2)+\n  scale_color_manual(values = slime_palette)\n\n\n\n\n\nCode\nggplot(SecondaryTypecounts%&gt;%\n         filter(Wave.Number&lt;4), aes(x = Generation, y = Secondary.count, fill = as.factor(Secondary.Type))) +\n  geom_col(position = \"stack\") +\n  labs(x = \"Generation\", y = \"Count\", fill = \"Secondary Slime Type\") +\n  theme_minimal()+\n  facet_wrap(~file, ncol=2)\n\n\n\n\n\nThese graphs will help you understand how the population of slimes is changing over time in response to your defenses.\nWhat type of slime is the most common in the last generation?\n\n\nCode\nggplot(allfiles%&gt;%\n         filter(Generation == 4),\n       aes(x = Main.Type, y = offspring_count)) +\n  geom_jitter(aes(color = Main.Type), width = 0.3, height = 0) +\n  facet_wrap(~file) +\n  scale_color_manual(values = slime_palette) +\n  theme_minimal()\n\n\n\n\n\nCode\nFitAvgType &lt;- allfiles%&gt;%\n  group_by(file, Generation, Wave.Number, Main.Type) %&gt;%\n  summarize(across(ends_with(\"Fitness\"), list(mean = mean, var = var, sum = sum), na.rm = TRUE, .names = \"{.fn}.{.col}\"))\n\n\n`summarise()` has grouped output by 'file', 'Generation', 'Wave.Number'. You\ncan override using the `.groups` argument.\n\n\nCode\nggplot(FitAvgType%&gt;%\n         filter(Generation == 4),\n       aes(x= Main.Type, y = sum.offspring.count.Fitness))+\n  geom_col()\n\n\n\n\n\n\n\nCode\ndf_sorted &lt;- allfiles %&gt;%\n    filter(Generation == 4) %&gt;%\n    arrange(offspring_count) %&gt;%\n    mutate(Unique.Slime.ID = factor(Unique.Slime.ID, levels = Unique.Slime.ID),\n           cumulative_offspring = cumsum(offspring_count),\n           # Create discrete bins for cumulative_offspring with labels\n           cumulative_bins = cut(cumulative_offspring, \n                                 breaks = quantile(cumulative_offspring, \n                                                  probs = c(0.5,0.9, 0.95, 1)),\n                                 labels = c(\"Low\", \"Medium\", \"High\")))\n\n\nggplot(df_sorted, aes(x = Unique.Slime.ID, y = offspring_count)) +\n    geom_col(aes(fill = Main.Type)) +\n    labs(title = \"Column Plot of Offspring Count\",\n         x = \"Slimes\",\n         y = \"Number of Offspring\") +\n    theme_minimal() +\n    facet_wrap(~file) +\n    scale_fill_brewer(palette = \"Set1\")+\n  theme(axis.text.x = element_blank())+\n  scale_fill_manual(values = slime_palette)\n\n\nScale for fill is already present.\nAdding another scale for fill, which will replace the existing scale."
  }
]