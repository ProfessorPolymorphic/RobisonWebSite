---
title: "LECTURE 2 - DATA ABSTRACTION"
subtitle: "BCB 504 / 520"
format:
  revealjs: 
    slide-number: true
    chalkboard: 
      buttons: false
    preview-links: auto
    css: styles.css
    footer: <a href="https://canvas.uidaho.edu/courses/17806" target="_blank">CANVAS</a>...<a href="https://professorpolymorphic.github.io/RobisonWebSite/BCB520/BCB520.html" target="_blank">HOME</a>
    theme: [default, custom.scss]
author: "Barrie Robison"
date: "2023-01-17"
categories: [Lecture, DataViz, Data]
image: "CthulhuAbstracts.png"
---

## LAST LECTURE

Computer-based visualization systems provide visual representations of datasets designed to help people carry out tasks more effectively.

![](frameworkbig.jpg){.absolute bottom="0" width="800"}

## WHAT?

![](what.png){.absolute bottom="0" height="400"} Before you design a visualization, you need to understand the [data]{.red}. Here, we consider the semantics to describe the [DATA TYPES]{.blue} and [DATA ATTRIBUTES]{.blue}.

## THE THREE MAJOR DATA TYPES

::: r-stack
![](Tables.png){.fragment .absolute bottom="100" left="0" height="400"}

![](Networks.png){.fragment .absolute bottom="100" left="280" height="400"}

![](Spatial.png){.fragment .absolute bottom="75" left="520" height="390"}
:::

## DATA ATTRIBUTES

![](Attributes.png){.absolute bottom="70" width="800"}

## WHAT?

Computer-based visualization systems provide visual representations of [datasets]{.red} designed to help people carry out tasks more effectively.

![](whatexpanded.png){.absolute bottom="0" right="0" width="450"}

![](what.png){.absolute bottom="0" height="400"}

## DATA SEMANTICS

**What does data mean?**

::: r-fit-text
[14, 2.6, 30, 30, 15, 100001]{.fragment .blue}

[What does this sequence of six numbers mean?]{.fragment}

::: {.fragment .fade-in-then-out}
two points far from each other in 3D space?

```{r}
#| fig-cap: "two points far from each other in 3D space?"
#| fig-align: right


df <- data.frame (x  = c("14", "30"),
                  y = c("2.6", "15"),
                  z = c("30","100001")
                  )
library(plotly)

plot_ly(x=df$x, y=df$y, z=df$z, type="scatter3d", mode="markers")

```
:::

::: {.fragment .fade-in-then-out}
two points close to each other in 2D space, with 15 links between them, and a weight of 100001 for the link?

![](RidiculousNetwork.png)
:::

[something else??]{.fragment .fade-in-then-out}

[Basil, 7, S, Pear]{.fragment .blue}

[What about this data?]{.fragment} ::: {.fragment .fade-in-then-out} food shipment of produce (basil & pear) arrived in satisfactory condition on 7th day of month

![](BasilPearDelivery.png)
:::

::: {.fragment .fade-in-then-out}
Basil Point neighborhood of city had 7 inches of snow cleared by the Pear Creek Limited snow removal service

![](snowremoval.png) ::: {.fragment .fade-in-then-out}

![lab rat Basil made 7 attempts to find way through south section of maze, these trials used pear as reward food](ratmazepear.png)
:::

## SEMANTICS

The meaning of a word, phrase, sentence, or text.

[Basil, 7, S, Pear]{.fragment .blue}

![](datatable.png){.absolute bottom="0" right="0" width="550"}

## SEMANTICS FOR DATA

![](datatable2.png){.absolute bottom="0" right="0" width="550"}

::: r-fit-text
-   [item:]{.red} individual entity, discrete

    -   eg patient, car, stock, city

    -   "independent variable"

-   [attribute:]{.red} property that is measured, observed, logged...

    -   eg height, blood pressure for patient

    -   eg horsepower, make for car

    -   "dependent variable"
:::

## SEMANTICS FOR DATA ...

![](datatable2.png){.absolute bottom="0" right="0" width="550"}

::: r-fit-text
-   [item:]{.red} individual entity, discrete -- eg patient, car, stock, city -- "independent variable"
-   [attribute:]{.red} property that is measured, observed, logged... -- eg height, blood pressure for patient -- eg horsepower, make for car -- "dependent variable"
:::

[ITEM:]{.red} person

[ATTRIBUTES:]{.red} Name, Age, Shirt Size, Favorite Fruit

## OTHER DATA TYPES

-links --express relationship between two items --eg friendship on facebook, interaction between proteins -positions --spatial data: location in 2D or 3D --pixels in photo, voxels in MRI scan, latitude/longitude -grids --sampling strategy for continuous data

## WHAT?

Computer-based visualization systems provide visual representations of [datasets]{.red} designed to help people carry out tasks more effectively.

![](whatexpanded.png){.absolute bottom="0" right="0" width="450"}

![](what.png){.absolute bottom="0" height="400"}

## DATASET TYPES: TABLES

Flat Table

::: columns
::: {.r-fit-text .column width="40%"}
-   One ITEM per row

    -   often called an observation

-   Each column is an ATTRIBUTE

    -   often called a variable

-   A cell holds the VALUE for an item/attribute pair

-   A UNIQUE key can be used (implicitly or explicitly) to identify each item even if they share all measured attributes
:::

::: {.column width="60%"}
![](flattable.png)
:::
:::

## FLAT TABLE EXAMPLE

![](spreadsheet.png)

## MULTIDIMENSIONAL TABLES

-indexing based on multiple keys --eg genes, patients

![](multidimtable1.png)

![](multidimtable2.png)

## NETWORKS

![](treeandnet.png)

network/graph nodes (vertices) connected by links (edges) tree is special case: no cycles often have roots and are directed

![](Networks.png)

## FIELDS

![](treenetfield.png)

## SPATIAL FIELDS 1

attribute values associated w/ cells cell contains value from continuous domain eg temperature, pressure, wind velocity measured or simulated

![](spatialfields.png) ![](map1.png)

## SPATIAL FIELDS 2

attribute values associated w/ cells cell contains value from continuous domain eg temperature, pressure, wind velocity measured or simulated major concerns sampling:where attributes are measured interpolation:how to model attributes elsewhere grid types

![](MRI.png)

## SPATIAL FIELDS 3

attribute values associated w/ cells cell contains value from continuous domain eg temperature, pressure, wind velocity measured or simulated major concerns sampling:where attributes are measured interpolation:how to model attributes elsewhere grid types major divisions attributes per cell: scalar (1), vector (2), tensor (many)

![](cellfields.png)

## GEOMETRY

![](alltypes.png)

## GEOMETRY 2

shape of items explicit spatial positions / regions points, lines, curves, surfaces, volumes boundary between computer graphics and visualization graphics: geometry taken as given vis: geometry is result of a design decision

![](geometrymap.png) \## COLLECTIONS

![](Clusters1.png) \## COLLECTIONS 2

how we group items sets unique items, unordered lists ordered, duplicates possible clusters groups of similar items

![](Collections.png)

## DATA TYPES

![](datatype1.png)

## ATTRIBUTE TYPES

which classes of values & measurements? categorical (nominal) compare equality no implicit ordering ordered ordinal less/greater than defined quantitative meaningful magnitude arithmetic possib

![](Attributes.png)

## EXAMPLE

categorical

ordinal

quantitative

![](spreadsheet.png)

## EXAMPLE

categorical

ordinal

quantitative

![](colorspreadsheet.png)

## ADDITIONAL SEMANTIC COMPONENTS

![](Otherstuff.png)

## DATA ABSTRACTION

translate from domain-specific language to generic visualization language

identify dataset type(s), attribute types
identify cardinality
how many items in the dataset?
what is cardinality of each attribute?
number of levels for categorical data
range for quantitative data

consider whether to transform data
guided by understanding of task

## MODELS: DATA VS CONCEPTUAL

data model
mathematical abstraction
sets with operations, eg floats with * / - +
variable data types in programming languages
conceptual model
mental construction (semantics)
supports reasoning
typically based on understanding of tasks [stay tuned!]

data abstraction process relies on conceptual model
for transforming data if needed 

## MODELS: EXAMPLE

data model: floats
32.52, 54.06, -14.35, ...
conceptual model
temperature
multiple possible data abstractions
continuous to 2 significant figures: quantitative
task: forecasting the weather
hot, warm, cold: ordinal
task: deciding if bath water is ready
above freezing, below freezing: categorical
task: decide if I should leave the house today

## DERIVED ATTRIBUTES

derived attribute: compute from originals
simple change of type
acquire additional data
complex transformation

![](derived.png)


## EXAMPLE

[Using Strahler numbers for real time visual exploration of huge graphs. Auber. Proc. Intl. Conf. Computer Vision and Graphics, pp. 56â€“69, 2002.]

Strahler number
centrality metric for trees/networks
derived quantitative attribute
draw top 5K of 500K for good skeleton

![](Strahler.png)
![](StrahlerAnalysis.png)
## SUMMARY

![](what.png)

![](whatexpanded.png)
