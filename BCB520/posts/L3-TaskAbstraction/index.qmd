---
title: "LECTURE 3 - TASK ABSTRACTION"
format:
  revealjs: 
    slide-number: true
    chalkboard: 
      buttons: false
    preview-links: auto
    css: styles.css
    footer: <a href="https://canvas.uidaho.edu/courses/17806" target="_blank">CANVAS</a>...<a href="https://professorpolymorphic.github.io/RobisonWebSite/BCB520/BCB520.html" target="_blank">HOME</a>
    theme: [default, custom.scss]
author: "Barrie Robison"
date: "2023-01-31"
categories: [Lecture, DataViz, Task]
image: "Nyarlathotep.png"
code-fold: true
description: "Action - Target pairs ... of **eldritch horror**?"
---

## LAST LECTURE

Computer-based visualization systems provide visual representations of [datasets]{.red} designed to help people carry out tasks more effectively.

![](whatexpanded.png){.absolute bottom="0" right="0" width="450"}

![](what.png){.absolute bottom="0" height="400"}

## TASK ABSTRACTION

Computer-based visualization systems provide visual representations of datasets designed to [help people carry out tasks]{.red} more effectively.

![](Whybig.png){.absolute bottom="0" right="0" width="550"}

![](Why.png){.absolute bottom="70" height="300"}

## FROM DOMAIN TO ABSTRACTION

![](domaintoabstract.png)

## KEY COMPONENTS OF TASK ABSTRACTION

**{[action]{.red}, [target]{.blue}} pairs**

Computer-based visualization systems provide visual representations of [datasets]{.blue} designed to help [people]{.red} carry out tasks more effectively.

## ACTIONS AND TARGETS

![](Whybig.png)

## ACTIONS - Analyze

::: columns
::: {.r-fit-text .column width="60%"}
-   [Consume:]{.red} Information has already been generated and stored as data.

    -   [Discover:]{.blue} new knowledge, test hypothesis, generate new hypothesis, verify
    -   [Present:]{.blue} communicate something specific and already understood
    -   [Enjoy:]{.blue} casual encounters with visualization

-   [Produce:]{.red} generate new material or information

    -   [Annotate:]{.blue} addition of graphical or text to existing visualization elements
    -   [Record:]{.blue} saves or captures visualization elements as persistent artifacts (screenshots, lists, parameter sets, annotations)
    -   [Derive:]{.blue} produce new data based on existing data (aka transform)
:::

::: {.column width="40%"}
![](Analyze.png)
:::
:::

## ACTIONS - Search

::: columns
::: {.r-fit-text .column width="60%"}
-   [Lookup:]{.red} Location and target both known

    -   Example: Look up humans in the Tree of Life, knowing they are mammals.

-   [Locate:]{.red} Location unknown and target known

    -   Example: Look up rabbits in the Tree of Life, not knowing they are lagomorphs.

-   [Browse:]{.red} Location known and target unknown

    -   Example: Find any clades within Mammalia that have only one species.

-   [Explore:]{.red} Location unknown and target unknown

    -   Example: Searching for anomalies in time series data.
:::

::: {.column width="40%"}
![](search.png)
:::
:::

## ACTIONS - Query

::: columns
::: {.r-fit-text .column width="60%"}
-   [Query:]{.red} How much of the data matters to the task?

    -   Identify: One (specific Item, individual, cell, etc)
    -   Compare: Some (multiple targets)
    -   Summarize: All (very common, aka Overview)
:::

::: {.column width="40%"}
![](query.png)
:::
:::

## TARGETS - All Data

![](Alldata.png)

## TARGETS - Attributes

![](Attributestarget.png)

## TARGETS - Other Data

![](networkspatial.png)

## SUMMARY

Computer-based visualization systems provide visual representations of datasets designed to [help people carry out tasks]{.red} more effectively.

![](Whybig.png){.absolute bottom="0" right="0" width="550"}

## EXAMPLES! {.scrollable .smaller}

```{r}
#| code-fold: true
#| echo: true
#| 

library(readxl)
library(vroom)
library(tidyverse)
Person <- read_excel("Tasks.xlsx", sheet = "Person",
    col_names = TRUE)
Action <- read_excel("Tasks.xlsx", sheet = "Action",
    col_names = TRUE)
Target <- read_excel("Tasks.xlsx", sheet = "Target",
    col_names = TRUE)

```

::: columns
::: {.column width="30%"}
`r knitr::kable(Person)`
:::

::: {.column width="30%"}
`r knitr::kable(Action)`
:::

::: {.column width="30%"}
`r knitr::kable(Target)`
:::
:::

## MANDATORY FUN {.scrollable .smaller}

**We will do these until everyone has done at least one example.**

[`r sample_n(Person,1)` `r sample_n(Action,1)` `r sample_n(Target,1)`]{.fragment}

[`r sample_n(Person,1)` `r sample_n(Action,1)` `r sample_n(Target,1)`]{.fragment}

[`r sample_n(Person,1)` `r sample_n(Action,1)` `r sample_n(Target,1)`]{.fragment}

[`r sample_n(Person,1)` `r sample_n(Action,1)` `r sample_n(Target,1)`]{.fragment}

[`r sample_n(Person,1)` `r sample_n(Action,1)` `r sample_n(Target,1)`]{.fragment}

[`r sample_n(Person,1)` `r sample_n(Action,1)` `r sample_n(Target,1)`]{.fragment}

[`r sample_n(Person,1)` `r sample_n(Action,1)` `r sample_n(Target,1)`]{.fragment}

[`r sample_n(Person,1)` `r sample_n(Action,1)` `r sample_n(Target,1)`]{.fragment}

[`r sample_n(Person,1)` `r sample_n(Action,1)` `r sample_n(Target,1)`]{.fragment}

[`r sample_n(Person,1)` `r sample_n(Action,1)` `r sample_n(Target,1)`]{.fragment}

[`r sample_n(Person,1)` `r sample_n(Action,1)` `r sample_n(Target,1)`]{.fragment}

[`r sample_n(Person,1)` `r sample_n(Action,1)` `r sample_n(Target,1)`]{.fragment}

[`r sample_n(Person,1)` `r sample_n(Action,1)` `r sample_n(Target,1)`]{.fragment}
