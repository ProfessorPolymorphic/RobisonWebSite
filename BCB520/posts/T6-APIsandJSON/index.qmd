---
title: "TUTORIAL 6 - APIs and JSON data"
image: "Cthulhuhockeymask.png"
execute: 
  eval: false

---

```{r}



library(tidyr)
library(dplyr)
library(repurrrsive)
library(tibblify)
library(purrr)
library(tidyverse)
library(readxl)
library(rjson)
library(jsonlite)
library(ggplot2)


Bio<-fromJSON("draft.json")

noway<-as.data.frame(Bio)

players<- noway %>%
  select(data.draftYear, data.playerId, data.playerName, data.draftYear,
         data.roundNumber, data.overallPickNumber, data.pickInRound,
         data.height, data.weight, data.position)

cleanplayers <- drop_na(players)
cleanplayers$playerId<-cleanplayers$data.playerId
```


```{r}
#| eval: false


api_url <- "https://statsapi.web.nhl.com"


recentdrafts<-cleanplayers%>%
  filter(data.draftYear>1999, data.draftYear<2018)
recentdrafts$playerId<-recentdrafts$data.playerId
playerIds <- as.list(recentdrafts$data.playerId)

testloop<-data.frame()

for (player_id in playerIds){
  
  

endpoint <- paste0("/api/v1/people/", player_id, "/stats?stats=yearByYear")


url_json <- paste0(api_url,endpoint)

raw_json <- url_json %>% 
  httr::GET() %>% 
  httr::content()

argh <- tibblify(raw_json$stats[[1]]$splits)

playerstats<- unnest_wider(argh, col=c(stat,league))
playerstats$playerId<-player_id
playerstatsfinal<-playerstats %>%
  filter(name=="National Hockey League") %>%
  select(season, games, 
         name, playerId) 
  
testloop<-rbind(testloop,playerstatsfinal)
}

argh2 <- tibblify(glorp$stats$splits[[1]])

d2000on<-full_join(testloop,recentdrafts, by="playerId")

```


```{r}


dataIwant <- rbind(d2000on, d2018, d2019, d2020, d2020on)
write.csv(dataIwant, file="NHLdraftgames.csv")

```

```{r}
#| eval: true
library(dplyr)

dataIwant2<- dataIwant %>%
  mutate(seasonshort = as.numeric(str_sub(season, start=1, end=4)))

dataIwant2$postdraft<- dataIwant2$seasonshort-dataIwant2$data.draftYear

dataIwant2$postdraft <- paste("dY", dataIwant2$postdraft)

dataIwant3<-dataIwant2 %>%
  group_by(playerId, data.draftYear, data.playerName, data.roundNumber,
           data.pickInRound, data.overallPickNumber, data.position, data.height,
           data.weight, postdraft) %>%
  summarise(totgames=sum(games))

datawide<-dataIwant3 %>%
  pivot_wider(names_from = postdraft, values_from = totgames, values_fill = 0)

allplayerswide<-full_join(cleanplayers,datawide, by="playerId")

allplayerswide <- allplayerswide %>% 
    mutate_at(20:41, ~replace_na(.,0))

lookup <- c(name = "data.playerName.x", 
            draftyear = "data.draftYear.x",
            round = "data.roundNumber.x",
            overall = "data.overallPickNumber.x",
            pickinRound = "data.pickInRound.x",
            height = "data.height.x",
            weight = "data.weight.x",
            position = "data.position.x")

testthing<-rename(allplayerswide, all_of(lookup))

keepthis<-testthing[c(1, 3:10, 19:41)]

whoa <- keepthis %>%
  pivot_longer(
    cols = starts_with("dY"),
    names_to = "postdraft",
    names_prefix = "dY",
    values_to = "NHLgames")

whoa <- drop_na(whoa)

whoa$postdraft<-as.numeric(whoa$postdraft)

whoanew <- whoa %>%
  mutate(position = replace(position, position == "G", "Goaltender"),
         position = replace(position, position == "D", "Defense"),
         position = replace(position, position == "C" | position =="LW", "Forward"),
         position = replace(position, position == "RW" | position == "F", "Forward"),
         position = replace(position, position == "C/LW" | position == "C/RW", "Forward"),
         position = replace(position, position == "LW/RW", "Forward"))
  

actualdata<- whoanew %>%
  filter(round<8, draftyear>2000, NHLgames<120)

ggplot(actualdata, aes(x=postdraft, y = NHLgames))+
  geom_smooth()+
  facet_grid(position~round)
 
write.csv(actualdata, file = "NHLdraft.csv")

actualdata5<-actualdata%>%
  filter(postdraft<6)
ggplot(actualdata5, aes(x=NHLgames))+
  geom_histogram()+
  facet_grid(round~postdraft)

```
