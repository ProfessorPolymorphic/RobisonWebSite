---
title: "TUTORIAL 6 - APIs and JSON data"
---

```{r}
library(tidyr)
library(dplyr)
library(repurrrsive)
library(tibblify)
library(purrr)
library(tidyverse)
library(readxl)
library(rjson)
library(jsonlite)
library(ggplot2)


Bio<-fromJSON("draft.json")

noway<-as.data.frame(Bio)

players<- noway %>%
  select(data.draftYear, data.playerId, data.playerName, data.draftYear,
         data.roundNumber, data.overallPickNumber, data.pickInRound,
         data.height, data.weight, data.position)

cleanplayers <- drop_na(players)
```


```{r}

api_url <- "https://statsapi.web.nhl.com"


recentdrafts<-cleanplayers%>%
  filter(data.draftYear>1999, data.draftYear<2018)
recentdrafts$playerId<-recentdrafts$data.playerId
playerIds <- as.list(recentdrafts$data.playerId)

testloop<-data.frame()

for (player_id in playerIds){
  
  

endpoint <- paste0("/api/v1/people/", player_id, "/stats?stats=yearByYear")


url_json <- paste0(api_url,endpoint)

raw_json <- url_json %>% 
  httr::GET() %>% 
  httr::content()

argh <- tibblify(raw_json$stats[[1]]$splits)

playerstats<- unnest_wider(argh, col=c(stat,league))
playerstats$playerId<-player_id
playerstatsfinal<-playerstats %>%
  filter(name=="National Hockey League") %>%
  select(season, games, 
         name, playerId) 
  
testloop<-rbind(testloop,playerstatsfinal)
}

argh2 <- tibblify(glorp$stats$splits[[1]])

d2000on<-full_join(testloop,recentdrafts, by="playerId")

```


```{r}

library(tibblify)

gh_users_small <- purrr::map(gh_users, ~ .x[c("followers", "login", "url", "name", "location", "email", "public_gists")])

names(gh_users_small[[1]])

tibblify(gh_users_small)

guess_tspec(gh_users_small)

```